{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/arpo/Pavel/textEncr/reactTextEncript/src/screens/MainScreen.jsx\";\nimport { Octicons } from \"@expo/vector-icons\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport { THEME } from \"../data/THEME\";\nimport { keyEdit, textEdit, finishTextEdit, deEncriptTextEdit } from \"../store/actions/main\";\nimport { headerTitleEdit } from \"../store/actions/headerTitle\";\nimport { MessageBox } from \"./mesageBox\";\nimport { ChekingFinishText } from \"./ChekingFinishText\";\nimport { lang } from \"../lang/lang\";\nimport { Header } from \"./Header\";\nexport var MainScreen = function MainScreen(_ref) {\n  var navigation = _ref.navigation;\n  var curentTheme = useSelector(function (state) {\n    return state.themeReducer.theme;\n  });\n\n  var _useState = useState({\n    message: \"\",\n    bgColor: \"\",\n    textColor: \"\",\n    time: 5000\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorMessage = _useState2[0],\n      setErrorMessage = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showCodeButton = _useState4[0],\n      setShowCodeButton = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showKey = _useState6[0],\n      setShowKey = _useState6[1];\n\n  var dispatch = useDispatch();\n  var intLang = useSelector(function (state) {\n    return state.interfaceLanguageReducer.interfaceLanguage;\n  });\n  var codeStatus = useSelector(function (state) {\n    return state.mainReducer.codeStatus;\n  });\n  var currentLang = useSelector(function (state) {\n    return state.mainReducer.askiiCod;\n  });\n  var mainText = useSelector(function (state) {\n    return state.mainReducer.startText;\n  });\n  var key = useSelector(function (state) {\n    return state.mainReducer.key;\n  });\n  var decodingText = useSelector(function (state) {\n    return state.mainReducer.deEncriptText;\n  });\n  var finishText = useSelector(function (state) {\n    console.log(\"store - \", state);\n    return state.mainReducer.finishText;\n  });\n\n  if (codeStatus == 'code') {\n    dispatch(headerTitleEdit(intLang.encryption));\n  }\n\n  if (codeStatus == 'deCode') {\n    dispatch(headerTitleEdit(intLang.decryption));\n  }\n\n  var onShare = function onShare() {\n    var result;\n    return _regeneratorRuntime.async(function onShare$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Share.share({\n              message: finishText\n            }));\n\n          case 3:\n            result = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"share error\", _context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var pasteText = function pasteText() {\n    var text;\n    return _regeneratorRuntime.async(function pasteText$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Clipboard.getString());\n\n          case 2:\n            text = _context2.sent;\n            dispatch(textEdit(text));\n            clearInputs();\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var clearAll = function clearAll() {\n    dispatch(key(''));\n    dispatch(textEdit(''));\n    dispatch(finishTextEdit(''));\n    dispatch(deEncriptTextEdit(''));\n  };\n\n  var clearInputs = function clearInputs() {\n    console.log('-----clear------');\n    dispatch(deEncriptTextEdit(''));\n    dispatch(finishTextEdit(''));\n  };\n\n  function textToArr(text) {\n    var arr = [];\n    var fullArr = [];\n\n    for (var i = 0; i < text.length; i++) {\n      var simbol = text[i];\n      var nSimbol = currentLang.indexOf(simbol);\n      arr.push(nSimbol);\n      fullArr.push({\n        s: simbol,\n        n: nSimbol\n      });\n    }\n\n    return arr;\n  }\n\n  function codeText(textSimArray, keySimArray) {\n    var i = -1,\n        long = currentLang.length;\n    var retArr = textSimArray.map(function (e) {\n      i++;\n      i > keySimArray.length - 1 ? i = 0 : false;\n      var result = (e + keySimArray[i]) % long;\n      return result;\n    });\n    return retArr;\n  }\n\n  function arrToText(arr) {\n    var str = \"\";\n    arr.forEach(function (element) {\n      str = str + currentLang[element];\n    });\n    return str;\n  }\n\n  function deCodeText(textArr, keyArr) {\n    var i = -1;\n    var long = currentLang.length;\n    var result = textArr.map(function (e) {\n      i++;\n      i == keyArr.length ? i = 0 : false;\n      var r = long + e - keyArr[i];\n\n      if (r >= long) {\n        r = r % long;\n      } else {\n        false;\n      }\n\n      return r;\n    });\n    return result;\n  }\n\n  function changeSymbols(text, symbols) {\n    for (var i = 0; i < text.length; i++) {\n      if (symbols.indexOf(text[i]) < 0) {\n        return text[i];\n        break;\n      }\n    }\n\n    return false;\n  }\n\n  function showMessage(text, bgColor, textColor, time) {\n    console.log('show message', text, bgColor, textColor, time);\n    setErrorMessage({\n      message: text,\n      bgColor: bgColor,\n      textColor: textColor\n    });\n    setTimeout(function () {\n      return setErrorMessage({\n        message: \"\"\n      });\n    }, time);\n  }\n\n  function mainTest(text, key) {\n    var textArray = textToArr(text),\n        keyArray = textToArr(key),\n        testCodeText = codeText(textArray, keyArray),\n        testResultCode = arrToText(testCodeText),\n        CodeSimbols = textToArr(testResultCode),\n        decode = deCodeText(CodeSimbols, keyArray),\n        decodetText = arrToText(decode);\n\n    if (text == decodetText) {\n      console.log(\"text - \" + text + \"\\n      key - \" + key + \"\\n      code - \" + testResultCode + \"\\n      decode - \" + decodetText);\n    } else {\n      console.log(\"----START----\");\n      console.log(\"test text - \", text);\n      console.log(\"array symbol text - \", textArray);\n      console.log(\"test key - \", key);\n      console.log(\"currentLang - \", currentLang.length);\n      console.log(\"testCodeText\", testCodeText);\n      console.log(\"testResultCode\", testResultCode);\n      console.log(\"------------------\");\n      console.log(\"testDecode symbol\", CodeSimbols);\n      console.log(\"testDecodeText\", decode);\n      console.log(\"decodetText\", decodetText);\n      console.log(\"----FINISH----\");\n    }\n  }\n\n  var _onChangeText = function onChangeText(text) {\n    clearInputs();\n    dispatch(textEdit(text));\n  };\n\n  var onChangeKey = function onChangeKey(text) {\n    clearInputs();\n    dispatch(key(text));\n\n    if (text.length < 3) {\n      setShowCodeButton(true);\n    } else {\n      setShowCodeButton(false);\n    }\n  };\n\n  var onPressDeCode = function onPressDeCode() {\n    var textArr = textToArr(mainText),\n        keyArr = textToArr(key),\n        codeArr = deCodeText(textArr, keyArr),\n        codingText = arrToText(codeArr);\n    dispatch(finishTextEdit(codingText));\n  };\n\n  var onPressCode = function onPressCode() {\n    if (mainText.length > 500) {\n      showMessage('Длина текста на может \\n быть больше 500 символов', 'grey', 'white', 'rgba(128,128,128,0.5)');\n      return;\n    }\n\n    var i = changeSymbols(mainText, currentLang);\n\n    if (i !== false) {\n      console.log('Неправильный символ - ' + i.charCodeAt());\n      showMessage('Неправильный символ ' + i, 'rgba(255,0,0,0.7)', 'white', 2000);\n      return;\n    }\n\n    var textArr = textToArr(mainText),\n        keyArr = textToArr(key),\n        codeArr = codeText(textArr, keyArr),\n        codingText = arrToText(codeArr);\n    dispatch(finishTextEdit(codingText));\n    var decodeArr = deCodeText(codeArr, keyArr),\n        changeText = arrToText(decodeArr);\n    dispatch(deEncriptTextEdit(changeText));\n  };\n\n  var showPaswordTougle = function showPaswordTougle() {\n    showKey ? setShowKey(false) : setShowKey(true);\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: curentTheme.bg_color,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\"\n    },\n    scroll: {\n      width: \"100%\"\n    },\n    mainWrapper: {\n      alignItems: \"center\",\n      backgroundColor: \"#fff\",\n      width: \"100%\",\n      backgroundColor: curentTheme.bg_color\n    },\n    input: {\n      width: \"85%\"\n    },\n    inputWrapper: {\n      alignItems: \"center\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      padding: 5,\n      borderRadius: 8,\n      backgroundColor: \"#fff\",\n      width: \"80%\",\n      marginVertical: 8,\n      paddingHorizontal: 5\n    },\n    inputIconWrapper: {\n      width: \"14%\",\n      height: \"100%\"\n    },\n    touchInputIcon: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    btnWrapper: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      width: \"80%\",\n      marginVertical: 8\n    },\n    btn: {\n      width: \"45%\"\n    },\n    text: {\n      color: \"white\"\n    },\n    modalMessage: {\n      backgroundColor: \"#d3d3d3cc\",\n      padding: 10,\n      borderRadius: 5,\n      position: \"absolute\",\n      bottom: 50\n    },\n    errorBlock: {\n      backgroundColor: \"#BF3030cc\",\n      position: \"absolute\",\n      padding: 10,\n      borderRadius: 8,\n      zIndex: 200\n    }\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 5\n    }\n  }, errorMessage.message !== \"\" ? React.createElement(MessageBox, {\n    text: errorMessage.message,\n    bgColor: errorMessage.bgColor,\n    textColor: errorMessage.textColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }) : false, React.createElement(Header, {\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: styles.scroll,\n    keyboardShouldPersistTaps: \"handled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.mainWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    numberOfLines: 4,\n    multiline: true,\n    value: mainText,\n    placeholder: intLang.enterText,\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.inputIconWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.touchInputIcon,\n    onPress: function onPress() {\n      return pasteText();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 15\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"paste\",\n    size: 24,\n    color: curentTheme.header_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  })))), React.createElement(View, {\n    style: styles.inputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: showKey ? false : true,\n    value: key,\n    style: styles.input,\n    placeholder: intLang.enterKey,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(text) {\n      return onChangeKey(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.inputIconWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.touchInputIcon,\n    onPress: function onPress() {\n      return showPaswordTougle();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 15\n    }\n  }, showKey ? React.createElement(Octicons, {\n    name: \"eye\",\n    size: 24,\n    color: curentTheme.header_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 19\n    }\n  }) : React.createElement(Octicons, {\n    name: \"eye-closed\",\n    size: 24,\n    color: curentTheme.header_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  })))), React.createElement(View, {\n    style: styles.btnWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 11\n    }\n  }, codeStatus == 'code' ? React.createElement(View, {\n    style: styles.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 15\n    }\n  }, React.createElement(Button, {\n    title: intLang.encryptBtn,\n    onPress: onPressCode,\n    disabled: showCodeButton,\n    color: curentTheme.btn_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 17\n    }\n  })) : false, codeStatus == 'deCode' ? React.createElement(View, {\n    style: styles.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }\n  }, React.createElement(Button, {\n    title: intLang.decryptBtn,\n    onPress: onPressDeCode,\n    color: curentTheme.btn_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  })) : false, React.createElement(View, {\n    style: styles.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: intLang.clear,\n    onPress: function onPress() {\n      return clearAll();\n    },\n    color: curentTheme.btn_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.inputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    numberOfLines: 4,\n    multiline: true,\n    placeholder: intLang.result,\n    editable: false,\n    value: finishText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.inputIconWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.touchInputIcon,\n    onPress: function onPress() {\n      return onShare();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 15\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"share-alt\",\n    size: 24,\n    color: curentTheme.header_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  })))), React.createElement(View, {\n    style: styles.btnWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: intLang.copy,\n    color: curentTheme.btn_color,\n    style: {\n      padding: 30,\n      color: 'green'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 15\n    }\n  }))), decodingText ? React.createElement(ChekingFinishText, {\n    decodingText: decodingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 28\n    }\n  }) : false)));\n};\n\nvar changeLangArr = function changeLangArr(text) {\n  var mapArray = [];\n\n  for (var i = 0; i < str.length; i++) {\n    var arr = {\n      i: i,\n      str: str[i]\n    };\n    mapArray.push(arr);\n  }\n\n  console.log(mapArray);\n  console.log(str);\n};","map":{"version":3,"sources":["/home/arpo/Pavel/textEncr/reactTextEncript/src/screens/MainScreen.jsx"],"names":["Octicons","FontAwesome5","React","useEffect","useRef","useState","useDispatch","useSelector","THEME","keyEdit","textEdit","finishTextEdit","deEncriptTextEdit","headerTitleEdit","MessageBox","ChekingFinishText","lang","Header","MainScreen","navigation","curentTheme","state","themeReducer","theme","message","bgColor","textColor","time","errorMessage","setErrorMessage","showCodeButton","setShowCodeButton","showKey","setShowKey","dispatch","intLang","interfaceLanguageReducer","interfaceLanguage","codeStatus","mainReducer","currentLang","askiiCod","mainText","startText","key","decodingText","deEncriptText","finishText","console","log","encryption","decryption","onShare","Share","share","result","pasteText","Clipboard","getString","text","clearInputs","clearAll","textToArr","arr","fullArr","i","length","simbol","nSimbol","indexOf","push","s","n","codeText","textSimArray","keySimArray","long","retArr","map","e","arrToText","str","forEach","element","deCodeText","textArr","keyArr","r","changeSymbols","symbols","showMessage","setTimeout","mainTest","textArray","keyArray","testCodeText","testResultCode","CodeSimbols","decode","decodetText","onChangeText","onChangeKey","onPressDeCode","codeArr","codingText","onPressCode","charCodeAt","decodeArr","changeText","showPaswordTougle","styles","StyleSheet","create","container","flex","backgroundColor","bg_color","alignItems","justifyContent","width","scroll","mainWrapper","input","inputWrapper","flexDirection","padding","borderRadius","marginVertical","paddingHorizontal","inputIconWrapper","height","touchInputIcon","btnWrapper","btn","color","modalMessage","position","bottom","errorBlock","zIndex","enterText","header_color","enterKey","encryptBtn","btn_color","decryptBtn","clear","copy","changeLangArr","mapArray"],"mappings":"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","sourcesContent":["import { Octicons } from \"@expo/vector-icons\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Clipboard,\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  Button,\n  TouchableOpacity,\n  TextInput,\n  Share,\n} from \"react-native\";\nimport { THEME } from \"../data/THEME\";\nimport {\n  keyEdit,\n  textEdit,\n  finishTextEdit,\n  deEncriptTextEdit,\n} from \"../store/actions/main\";\nimport {\n  headerTitleEdit\n} from \"../store/actions/headerTitle\";\nimport { MessageBox } from \"./mesageBox\";\nimport { ChekingFinishText } from './ChekingFinishText';\nimport { lang } from \"../lang/lang\";\nimport {Header} from \"./Header\"\nexport const MainScreen = ({navigation}) => {\n  const curentTheme = useSelector((state) => state.themeReducer.theme);\n\n  const [errorMessage, setErrorMessage] = useState({\n    message: \"\",\n    bgColor: \"\",\n    textColor: \"\",\n    time: 5000,\n  });\n  const [showCodeButton, setShowCodeButton] = useState(true);\n  const [showKey, setShowKey] = useState(false);\n  const dispatch = useDispatch();\n  \n  const intLang = useSelector((state) => state.interfaceLanguageReducer.interfaceLanguage);\n  \n\n  /*useEffect(()=>{\n    dispatch(changeKey()\n    )\n  },[dispatch])\n  */\n  const codeStatus = useSelector((state) => state.mainReducer.codeStatus);\n  const currentLang = useSelector((state) => state.mainReducer.askiiCod);\n  const mainText = useSelector((state) => state.mainReducer.startText);\n  const key = useSelector((state) => state.mainReducer.key);\n  const decodingText = useSelector((state) => state.mainReducer.deEncriptText);\n  const finishText = useSelector((state) => {\n    console.log(\"store - \", state);\n    return state.mainReducer.finishText;\n  });\n if (codeStatus == 'code'){\n  dispatch(headerTitleEdit(intLang.encryption))\n } \n if (codeStatus == 'deCode'){\n  dispatch(headerTitleEdit(intLang.decryption))\n } \n  const onShare = async () => {\n    try {\n      const result = await Share.share({\n        message: finishText,\n      });\n    } catch (error) {\n      console.log(\"share error\", error);\n    }\n  };\n\n  const pasteText = async () => {\n    const text = await Clipboard.getString();\n    dispatch(textEdit(text));\n    clearInputs()\n  };\n  const clearAll = () => {\n    dispatch(key(''))\n    dispatch(textEdit(''))\n    dispatch(finishTextEdit(''))\n    dispatch(deEncriptTextEdit(''))\n  }\n  const clearInputs = () => {\n    console.log('-----clear------')\n    dispatch(deEncriptTextEdit(''))\n    dispatch(finishTextEdit(''))\n  }\n  function textToArr(text) {\n    let arr = [];\n    let fullArr = [];\n\n    for (let i = 0; i < text.length; i++) {\n      let simbol = text[i];\n      let nSimbol = currentLang.indexOf(simbol);\n      arr.push(nSimbol);\n      fullArr.push({ s: simbol, n: nSimbol });\n    }\n    return arr;\n  }\n  function codeText(textSimArray, keySimArray) {\n    let i = -1,\n      long = currentLang.length;\n    let retArr = textSimArray.map((e) => {\n      i++;\n      i > keySimArray.length - 1 ? (i = 0) : false;\n\n      let result = (e + keySimArray[i]) % long;\n      return result;\n    });\n\n    return retArr;\n  }\n  function arrToText(arr) {\n    let str = \"\";\n    arr.forEach((element) => {\n      str = str + currentLang[element];\n    });\n    return str;\n  }\n  function deCodeText(textArr, keyArr) {\n    let i = -1;\n    let long = currentLang.length;\n    let result = textArr.map((e) => {\n      i++;\n      i == keyArr.length ? (i = 0) : false;\n      //(l + t - k) % l\n      let r = long + e - keyArr[i];\n      if (r >= long) {\n        r = r % long;\n      } else {\n        false;\n      }\n      return r;\n    });\n    return result;\n  }\n  function changeSymbols(text, symbols) {\n    for (let i = 0; i < text.length; i++) {\n      if (symbols.indexOf(text[i]) < 0) {\n        return text[i];\n        break;\n      }\n    }\n    return false;\n  }\n  function showMessage(text, bgColor, textColor, time) {\n    console.log('show message', text, bgColor, textColor, time)\n    setErrorMessage({\n      message: text,\n      bgColor: bgColor,\n      textColor: textColor,\n    });\n    setTimeout(() => setErrorMessage({ message: \"\" }), time);\n\n  }\n  function mainTest(text, key) {\n    /*\n    - получить допустимые символы 'currentLang'\n    - проверить символы в тексте и в ключе\n    - перевети симоволы ключа в масив\n    - перевести символы текста в масив\n    - зашифровать, получить масив шифрованых символов\n    - перевести зашифрованный масив в текст\n    ---\n    - перевеси шифрованый текст в масив\n    - перевести ключ в масив (уже сделанно)\n    - разшифровать - получить мачив символов\n    - перевести масив в текст\n    */\n    let //currentLang\n      textArray = textToArr(text),\n      keyArray = textToArr(key),\n      testCodeText = codeText(textArray, keyArray),\n      testResultCode = arrToText(testCodeText),\n      ///--\n      CodeSimbols = textToArr(testResultCode),\n      decode = deCodeText(CodeSimbols, keyArray),\n      decodetText = arrToText(decode);\n    if (text == decodetText) {\n      console.log(`text - ${text}\n      key - ${key}\n      code - ${testResultCode}\n      decode - ${decodetText}`);\n    } else {\n      console.log(\"----START----\");\n      console.log(\"test text - \", text);\n      console.log(\"array symbol text - \", textArray);\n      console.log(\"test key - \", key);\n      console.log(\"currentLang - \", currentLang.length);\n      console.log(\"testCodeText\", testCodeText);\n      console.log(\"testResultCode\", testResultCode);\n      console.log(\"------------------\");\n      console.log(\"testDecode symbol\", CodeSimbols);\n      console.log(\"testDecodeText\", decode);\n      console.log(\"decodetText\", decodetText);\n      console.log(\"----FINISH----\");\n    }\n  }\n\n  const onChangeText = (text) => {\n\n    clearInputs()\n    dispatch(textEdit(text));\n  };\n  const onChangeKey = (text) => {\n    clearInputs()\n    dispatch(key(text));\n    if (text.length < 3) {\n      setShowCodeButton(true);\n    } else {\n      setShowCodeButton(false);\n    }\n  };\n\n  let onPressDeCode = () => {\n    let textArr = textToArr(mainText), // числовой масив текста\n      keyArr = textToArr(key), // числовой масив ключа\n      codeArr = deCodeText(textArr, keyArr), // числовой масив закодированого текста\n      codingText = arrToText(codeArr);\n    dispatch(finishTextEdit(codingText));\n\n  };\n\n  let onPressCode = () => {\n    if (mainText.length > 500) {\n      showMessage('Длина текста на может \\n быть больше 500 символов', 'grey', 'white', 'rgba(128,128,128,0.5)')\n      return\n    }\n    let i = changeSymbols(mainText, currentLang);\n    if (i !== false) {\n      console.log('Неправильный символ - ' + i.charCodeAt())\n      showMessage('Неправильный символ ' + i, 'rgba(255,0,0,0.7)', 'white', 2000)\n      return;\n    }\n\n    let textArr = textToArr(mainText), // числовой масив текста\n      keyArr = textToArr(key), // числовой масив ключа\n      codeArr = codeText(textArr, keyArr), // числовой масив закодированого текста\n      codingText = arrToText(codeArr);\n\n    dispatch(finishTextEdit(codingText));\n\n    //codeText(textToArr(currentLang), textToArr(currentLang));\n    let decodeArr = deCodeText(codeArr, keyArr), // числовой масив закодированого текста\n      changeText = arrToText(decodeArr);\n\n    dispatch(deEncriptTextEdit(changeText));\n\n  };\n\n  const showPaswordTougle = () => {\n    showKey ? setShowKey(false) : setShowKey(true);\n  };\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: curentTheme.bg_color,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n    },\n   \n    scroll: {\n      width: \"100%\",\n    },\n    mainWrapper: {\n      alignItems: \"center\",\n      backgroundColor: \"#fff\",\n      width: \"100%\",\n      backgroundColor: curentTheme.bg_color,\n    },\n    input: {\n      width: \"85%\",\n      //width: \"100%\",\n    },\n    inputWrapper: {\n      alignItems: \"center\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      padding: 5,\n      borderRadius: 8,\n      backgroundColor: \"#fff\",\n      width: \"80%\",\n      marginVertical: 8,\n      paddingHorizontal: 5,\n    },\n    inputIconWrapper: {\n      width: \"14%\",\n      height: \"100%\",\n    },\n    touchInputIcon: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    btnWrapper: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      width: \"80%\",\n      marginVertical: 8,\n    },\n    btn: {\n      width: \"45%\",\n    },\n    text: {\n      color: \"white\",\n    },\n    modalMessage: {\n      backgroundColor: \"#d3d3d3cc\",\n      padding: 10,\n      borderRadius: 5,\n      position: \"absolute\",\n      bottom: 50,\n    },\n    errorBlock: {\n      backgroundColor: \"#BF3030cc\",\n      position: \"absolute\",\n      padding: 10,\n      borderRadius: 8,\n      zIndex: 200,\n    },\n  });\n  return (\n    <View style={styles.container}>\n    {errorMessage.message !== \"\" ? (\n          <MessageBox\n            text={errorMessage.message}\n            bgColor={errorMessage.bgColor}\n            textColor={errorMessage.textColor}\n          ></MessageBox>\n        ) : (\n            false\n          )}\n      <Header navigation = {navigation} ></Header>\n      <ScrollView style={styles.scroll} keyboardShouldPersistTaps=\"handled\">\n        <View style={styles.mainWrapper}>\n          <View style={styles.inputWrapper}>\n            <TextInput\n              style={styles.input}\n              numberOfLines={4}\n              multiline\n              value={mainText}\n              placeholder={intLang.enterText}\n              onChangeText={(text) => onChangeText(text)}\n            ></TextInput>\n            <View style={styles.inputIconWrapper}>\n              <TouchableOpacity\n                style={styles.touchInputIcon}\n                onPress={() => pasteText()}\n              >\n                <FontAwesome5\n                  name=\"paste\"\n                  size={24}\n                  color={curentTheme.header_color}\n                />\n              </TouchableOpacity>\n            </View>\n          </View>\n          <View style={styles.inputWrapper}>\n            <TextInput\n              secureTextEntry={showKey ? false : true}\n              value={key}\n              style={styles.input}\n              placeholder={intLang.enterKey}\n              autoCapitalize={\"none\"}\n              //value={Key}\n              onChangeText={(text) => onChangeKey(text)}\n            ></TextInput>\n            <View style={styles.inputIconWrapper}>\n              <TouchableOpacity\n                style={styles.touchInputIcon}\n                onPress={() => showPaswordTougle()}\n              >\n                {showKey ? (\n                  <Octicons name=\"eye\" size={24} color={curentTheme.header_color} />\n                ) : (\n                    <Octicons\n                      name=\"eye-closed\"\n                      size={24}\n                      color={curentTheme.header_color}\n                    />\n                  )}\n              </TouchableOpacity>\n            </View>\n          </View>\n          <View style={styles.btnWrapper}>\n            {codeStatus == 'code' ? (\n              <View style={styles.btn}>\n                <Button\n                  title={intLang.encryptBtn}\n                  onPress={onPressCode}\n                  disabled={showCodeButton}\n                  color={curentTheme.btn_color}\n                ></Button>\n              </View>\n            ) : false}\n            {codeStatus == 'deCode' ? (\n              <View style={styles.btn}>\n                <Button\n                  title={intLang.decryptBtn}\n                  onPress={onPressDeCode}\n                  color={curentTheme.btn_color}\n                ></Button>\n              </View>\n            ) : false}\n            <View style={styles.btn}>\n              <Button\n                title={intLang.clear}\n                onPress={() => clearAll()}\n                color={curentTheme.btn_color}\n              ></Button>\n            </View>\n          </View>\n          <View style={styles.inputWrapper}>\n            <TextInput\n              style={styles.input}\n              numberOfLines={4}\n              multiline\n              placeholder={intLang.result}\n              editable={false}\n              value={finishText}\n            ></TextInput>\n            <View style={styles.inputIconWrapper}>\n              <TouchableOpacity\n                style={styles.touchInputIcon}\n                onPress={() => onShare()}\n              >\n                <FontAwesome5\n                  name=\"share-alt\"\n                  size={24}\n                  color={curentTheme.header_color}\n                />\n              </TouchableOpacity>\n            </View>\n          </View>\n          <View style={styles.btnWrapper}>\n            <View style={styles.btn}>\n              <Button\n                title={intLang.copy}\n                // onPress={}\n                color={curentTheme.btn_color}\n                style={{ padding: 30, color: 'green' }}\n              ></Button>\n            </View>\n\n          </View>\n          {decodingText ? (<ChekingFinishText decodingText={decodingText}></ChekingFinishText>) : false}\n\n\n        </View>\n      </ScrollView>\n\n    </View>\n  );\n};\n\n\n\nlet changeLangArr = (text) => {\n  let mapArray = [];\n  for (let i = 0; i < str.length; i++) {\n    let arr = { i, str: str[i] };\n    mapArray.push(arr);\n  }\n  console.log(mapArray);\n  console.log(str);\n};\n"]},"metadata":{},"sourceType":"module"}