{"ast":null,"code":"var _jsxFileName = \"/home/arpo/Pavel/textEncr/reactTextEncript/src/screens/SettingLangPicker.jsx\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { interfaceLanguageEdit, languageTitleEdit } from \"../store/actions/interfaceLanguage\";\nimport { languages, langInt } from \"../data/languages\";\nexport var SettingLangPicker = function SettingLangPicker() {\n  var curentTheme = useSelector(function (state) {\n    return state.themeReducer.theme;\n  });\n  var dispatch = useDispatch();\n  var curentLangTitle = useSelector(function (state) {\n    return state.interfaceLanguageReducer.languageTitle;\n  });\n  var currentIntLang = useSelector(function (state) {\n    return state.interfaceLanguageReducer.interfaceLanguage;\n  });\n\n  var changeLang = function changeLang(index) {\n    console.log(index);\n    dispatch(languageTitleEdit(languages[index]));\n    var key = languages[index].key;\n    dispatch(interfaceLanguageEdit(langInt[key]));\n  };\n\n  var styles = StyleSheet.create({\n    settingItem: {\n      alignItems: 'center',\n      borderColor: curentTheme.header_color,\n      borderBottomWidth: 1,\n      width: '100%',\n      paddingBottom: 20,\n      paddingTop: 20,\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    settingWrapper: {\n      width: '100%'\n    },\n    settingTitle: {\n      fontSize: 16,\n      marginLeft: 20\n    },\n    dropBox: {\n      top: 20,\n      right: 0,\n      position: 'absolute',\n      width: 200,\n      height: 400,\n      backgroundColor: 'red',\n      zIndex: 0\n    }\n  });\n  return React.createElement(View, {\n    style: styles.settingItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.settingTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, currentIntLang.applicationLanguage)), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, React.createElement(Picker, {\n    selectedValue: curentLangTitle.key,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return changeLang(itemIndex);\n    },\n    mode: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, languages.map(function (item) {\n    return React.createElement(Picker.Item, {\n      label: item.title,\n      key: item.key,\n      value: item.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 42\n      }\n    });\n  }))));\n};","map":{"version":3,"sources":["/home/arpo/Pavel/textEncr/reactTextEncript/src/screens/SettingLangPicker.jsx"],"names":["React","useDispatch","useSelector","interfaceLanguageEdit","languageTitleEdit","languages","langInt","SettingLangPicker","curentTheme","state","themeReducer","theme","dispatch","curentLangTitle","interfaceLanguageReducer","languageTitle","currentIntLang","interfaceLanguage","changeLang","index","console","log","key","styles","StyleSheet","create","settingItem","alignItems","borderColor","header_color","borderBottomWidth","width","paddingBottom","paddingTop","flexDirection","justifyContent","settingWrapper","settingTitle","fontSize","marginLeft","dropBox","top","right","position","height","backgroundColor","zIndex","applicationLanguage","itemValue","itemIndex","map","item","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View, Text, Picker } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { interfaceLanguageEdit, languageTitleEdit } from \"../store/actions/interfaceLanguage\";\nimport { languages, langInt } from \"../data/languages\";\nexport const SettingLangPicker = () => {\n  const curentTheme = useSelector((state) => state.themeReducer.theme);\n  const dispatch = useDispatch();\n  const curentLangTitle = useSelector((state) => state.interfaceLanguageReducer.languageTitle)\n  const currentIntLang = useSelector((state) => state.interfaceLanguageReducer.interfaceLanguage);\n  const changeLang = (index) => {\n    console.log(index)\n    dispatch(languageTitleEdit(languages[index]))\n    let key = languages[index].key   \n    dispatch(interfaceLanguageEdit(langInt[key]))\n  }\n  const styles = StyleSheet.create({\n    settingItem: {\n      alignItems: 'center',\n      borderColor: curentTheme.header_color,\n      borderBottomWidth: 1,\n      width: '100%',\n      paddingBottom: 20,\n      paddingTop: 20,\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    settingWrapper: {\n      width: '100%',\n    },\n    settingTitle: {\n      fontSize: 16,\n      marginLeft: 20,\n    },\n    dropBox: {\n      top: 20,\n      right: 0,\n      position: 'absolute',\n      width: 200,\n      height: 400,\n      backgroundColor: 'red',\n      zIndex: 0,\n    },\n  });\n  return (\n\n        <View style={styles.settingItem}>\n          <View>\n            <Text style={styles.settingTitle}>{currentIntLang.applicationLanguage}</Text>\n          </View>\n          <View>\n            <Picker\n              selectedValue={curentLangTitle.key}\n              style={{ height: 50, width: 150 }}\n              onValueChange={(itemValue, itemIndex) => changeLang(itemIndex)}\n              mode='dropdown'\n            >\n              {\n                languages.map((item) => (<Picker.Item label={item.title} key={item.key} value={item.key} />))\n              }\n            </Picker>\n\n          </View>\n\n        </View>\n  );\n};\n\n\n"]},"metadata":{},"sourceType":"module"}