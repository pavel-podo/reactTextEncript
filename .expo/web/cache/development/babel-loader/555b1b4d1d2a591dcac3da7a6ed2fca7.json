{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { KEY, TEXT, ENCRIPT_TEXT, START_ENCRIPT_TEXT, DE_ENCRIPT_TEXT } from \"../types\";\nvar initialState = {\n  startText: 'Start Text',\n  encriptText: 'Finish Text',\n  key: 'Key',\n  askiiCod: \"'!\\\"#$%&()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\",\n  deEncriptText: 'deFin'\n};\nexport var mainReducer = function mainReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case KEY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        key: action.payload\n      });\n\n    case TEXT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        startText: action.payload\n      });\n\n    case ENCRIPT_TEXT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        encriptText: action.payload\n      });\n\n    case DE_ENCRIPT_TEXT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        deEncriptText: action.payload\n      });\n\n    default:\n      return state;\n  }\n\n  return state;\n};","map":{"version":3,"sources":["D:/react/text-encryption/src/store/reducers/mainReducer.js"],"names":["KEY","TEXT","ENCRIPT_TEXT","START_ENCRIPT_TEXT","DE_ENCRIPT_TEXT","initialState","startText","encriptText","key","askiiCod","deEncriptText","mainReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,IAAd,EAAmBC,YAAnB,EAAgCC,kBAAhC,EAAmDC,eAAnD;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAC,YADO;AAEjBC,EAAAA,WAAW,EAAC,aAFK;AAGjBC,EAAAA,GAAG,EAAC,KAHa;AAIjBC,EAAAA,QAAQ,EAAC,iKAJQ;AAKjBC,EAAAA,aAAa,EAAC;AALG,CAArB;AAOA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AACzD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,GAAL;AAAS,6CAAUY,KAAV;AAAiBJ,QAAAA,GAAG,EAACK,MAAM,CAACE;AAA5B;;AACT,SAAKd,IAAL;AAAU,6CAAUW,KAAV;AAAiBN,QAAAA,SAAS,EAACO,MAAM,CAACE;AAAlC;;AACV,SAAKb,YAAL;AAAkB,6CAAUU,KAAV;AAAiBL,QAAAA,WAAW,EAACM,MAAM,CAACE;AAApC;;AAClB,SAAKX,eAAL;AAAqB,6CAAUQ,KAAV;AAAiBF,QAAAA,aAAa,EAACG,MAAM,CAACE;AAAtC;;AACrB;AAAQ,aAAOH,KAAP;AALZ;;AAOF,SAAOA,KAAP;AACD,CATM","sourcesContent":["import { KEY, TEXT,ENCRIPT_TEXT,START_ENCRIPT_TEXT,DE_ENCRIPT_TEXT } from \"../types\";\r\n\r\nconst initialState = {\r\n    startText:'Start Text',\r\n    encriptText:'Finish Text',\r\n    key:'Key',\r\n    askiiCod:\"'!\\\"#$%&()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\",\r\n    deEncriptText:'deFin',\r\n};\r\nexport const mainReducer = (state = initialState, action) => {\r\n    switch(action.type){  \r\n        case KEY:return{...state, key:action.payload  } \r\n        case TEXT:return{...state, startText:action.payload  } \r\n        case ENCRIPT_TEXT:return{...state, encriptText:action.payload  } \r\n        case DE_ENCRIPT_TEXT:return{...state, deEncriptText:action.payload  } \r\n        default:return state\r\n    }\r\n  return state;\r\n};\r\n   "]},"metadata":{},"sourceType":"module"}