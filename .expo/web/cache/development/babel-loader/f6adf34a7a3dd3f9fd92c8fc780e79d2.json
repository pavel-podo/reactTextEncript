{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CODE_STATUS, KEY, TEXT, FINISH_TEXT, DE_ENCRIPT_TEXT, ENCRIPT_TEXT } from \"../types\";\nvar initialState = {\n  startText: '',\n  finishText: '',\n  encriptText: '',\n  key: '',\n  askiiCod: \"\\\\'!\\\"#$%&()*+,-./0123456789:;<=>? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_abcdefghijklmnopqrstuvwxyz{|}~\\u0410\\u0411\\u0412\\u0413\\u0414\\u0415\\u0416\\u0417\\u0418\\u0419\\u041A\\u041B\\u041C\\u041D\\u041E\\u041F\\u0420\\u0421\\u0422\\u0423\\u0424\\u0425\\u0426\\u0427\\u0428\\u0429\\u042A\\u042B\\u042C\\u042D\\u042E\\u042F\\u0430\\u0431\\u0432\\u0433\\u0434\\u0435\\u0436\\u0437\\u0438\\u0439\\u043A\\u043B\\u043C\\u043D\\u043E\\u043F\\u0440\\u0441\\u0442\\u0443\\u0444\\u0445\\u0446\\u0447\\u0448\\u0449\\u044A\\u044B\\u044C\\u044D\\u044E\\u044F\\n\",\n  deEncriptText: '',\n  codeStatus: 'code'\n};\nexport var mainReducer = function mainReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case KEY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        key: action.payload\n      });\n\n    case TEXT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        startText: action.payload\n      });\n\n    case FINISH_TEXT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        finishText: action.payload\n      });\n\n    case DE_ENCRIPT_TEXT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        deEncriptText: action.payload\n      });\n\n    case CODE_STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        codeStatus: action.payload\n      });\n\n    case ENCRIPT_TEXT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        encriptText: action.payload\n      });\n\n    default:\n      return state;\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/home/arpo/Pavel/textEncr/reactTextEncript/src/store/reducers/mainReducer.js"],"names":["CODE_STATUS","KEY","TEXT","FINISH_TEXT","DE_ENCRIPT_TEXT","ENCRIPT_TEXT","initialState","startText","finishText","encriptText","key","askiiCod","deEncriptText","codeStatus","mainReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SACQA,WADR,EAEQC,GAFR,EAGQC,IAHR,EAIQC,WAJR,EAKQC,eALR,EAOQC,YAPR;AAUA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjBC,EAAAA,WAAW,EAAE,EAHI;AAIjBC,EAAAA,GAAG,EAAE,EAJY;AAKjBC,EAAAA,QAAQ,seALS;AAMjBC,EAAAA,aAAa,EAAE,EANE;AAOjBC,EAAAA,UAAU,EAAE;AAPK,CAArB;AASA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBT,YAAyB;AAAA,MAAXU,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,GAAL;AAAU,6CAAYc,KAAZ;AAAmBL,QAAAA,GAAG,EAAEM,MAAM,CAACE;AAA/B;;AACV,SAAKhB,IAAL;AAAW,6CAAYa,KAAZ;AAAmBR,QAAAA,SAAS,EAAES,MAAM,CAACE;AAArC;;AACX,SAAKf,WAAL;AAAkB,6CAAYY,KAAZ;AAAmBP,QAAAA,UAAU,EAAEQ,MAAM,CAACE;AAAtC;;AAClB,SAAKd,eAAL;AAAsB,6CAAYW,KAAZ;AAAmBH,QAAAA,aAAa,EAAEI,MAAM,CAACE;AAAzC;;AACtB,SAAKlB,WAAL;AAAkB,6CAAYe,KAAZ;AAAmBF,QAAAA,UAAU,EAAEG,MAAM,CAACE;AAAtC;;AAElB,SAAKb,YAAL;AAAmB,6CAAYU,KAAZ;AAAmBN,QAAAA,WAAW,EAAEO,MAAM,CAACE;AAAvC;;AACnB;AAAS,aAAOH,KAAP;AARb;;AAUA,SAAOA,KAAP;AACH,CAZM","sourcesContent":["import { \n        CODE_STATUS, \n        KEY, \n        TEXT,\n        FINISH_TEXT,  \n        DE_ENCRIPT_TEXT,\n        //--\n        ENCRIPT_TEXT, \n         } from \"../types\";\n\nconst initialState = {\n    startText: '',\n    finishText: '',\n    encriptText: '',\n    key: '',\n    askiiCod: `\\\\'!\"#$%&()*+,-./0123456789:;<=>? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_abcdefghijklmnopqrstuvwxyz{|}~АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\\n`,\n    deEncriptText: '',\n    codeStatus: 'code',\n};\nexport const mainReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case KEY: return { ...state, key: action.payload }\n        case TEXT: return { ...state, startText: action.payload }\n        case FINISH_TEXT: return { ...state, finishText: action.payload }\n        case DE_ENCRIPT_TEXT: return { ...state, deEncriptText: action.payload }\n        case CODE_STATUS: return { ...state, codeStatus: action.payload }\n        //----\n        case ENCRIPT_TEXT: return { ...state, encriptText: action.payload }\n        default: return state\n    }\n    return state;\n};\n"]},"metadata":{},"sourceType":"module"}