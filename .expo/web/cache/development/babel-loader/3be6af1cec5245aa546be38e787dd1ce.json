{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HEADER_TITLE } from \"../types\";\nvar initialState = {\n  headerTitle: ''\n};\nexport var headerReducer = function headerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HEADER_TITLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        headerTitle: action.payload\n      });\n\n    default:\n      return state;\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/home/arpo/Pavel/textEncr/reactTextEncript/src/store/reducers/headerReducer.js"],"names":["HEADER_TITLE","initialState","headerTitle","headerReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SACIA,YADJ;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAArB;AAGA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,YAAL;AAAmB,6CAAYI,KAAZ;AAAmBF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAAvC;;AACnB;AAAS,aAAOH,KAAP;AAFb;;AAIA,SAAOA,KAAP;AACH,CANM","sourcesContent":["import {\n    HEADER_TITLE\n} from \"../types\";\nconst initialState = {\n    headerTitle: '',\n};\nexport const headerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case HEADER_TITLE: return { ...state, headerTitle: action.payload }\n        default: return state\n    }\n    return state;\n};\n"]},"metadata":{},"sourceType":"module"}