{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { THEME } from \"../types\";\nimport { themes } from \"../../data/THEME\";\nvar initialState = {\n  theme: themes[1]\n};\nexport var themeReducer = function themeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case THEME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        theme: action.payload\n      });\n\n    default:\n      return state;\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/home/arpo/Pavel/textEncr/reactTextEncript/src/store/reducers/themeReducer.js"],"names":["THEME","themes","initialState","theme","themeReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,KAAR;AACA,SAAQC,MAAR;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAACF,MAAM,CAAC,CAAD;AADK,CAArB;AAGA,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,KAAL;AAAY,6CAAYK,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAAjC;;AACZ;AAAS,aAAOH,KAAP;AAFb;;AAIA,SAAOA,KAAP;AACH,CANM","sourcesContent":["import {THEME} from \"../types\";\nimport{ themes} from \"../../data/THEME\"\nconst initialState = {\n    theme:themes[1],\n};\nexport const themeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case THEME: return { ...state, theme: action.payload };\n        default: return state\n    }\n    return state;\n};\n"]},"metadata":{},"sourceType":"module"}