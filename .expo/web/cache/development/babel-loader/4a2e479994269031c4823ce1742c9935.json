{"ast":null,"code":"var _jsxFileName = \"/home/arpo/Pavel/textEncr/reactTextEncript/src/screens/SettingScreen.jsx\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Header } from \"./Header\";\nimport { headerTitleEdit } from \"../store/actions/headerTitle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SettingLangPicker } from \"./SettingLangPicker\";\nimport { SettingThemePicker } from \"./SettingThemePicker\";\nexport var SettingScreen = function SettingScreen(_ref) {\n  var navigation = _ref.navigation;\n  var curentTheme = useSelector(function (state) {\n    return state.themeReducer.theme;\n  });\n  var dispatch = useDispatch();\n  var currentIntLang = useSelector(function (state) {\n    return state.interfaceLanguageReducer.interfaceLanguage;\n  });\n  dispatch(headerTitleEdit(currentIntLang.settings));\n  var styles = StyleSheet.create({\n    settingItem: {\n      alignItems: 'center',\n      borderColor: curentTheme.header_color,\n      borderBottomWidth: 1,\n      width: '100%',\n      paddingBottom: 20,\n      paddingTop: 20,\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    settingWrapper: {\n      width: '100%'\n    },\n    settingTitle: {\n      fontSize: 16,\n      marginLeft: 20\n    },\n    dropBox: {\n      top: 20,\n      right: 0,\n      position: 'absolute',\n      width: 200,\n      height: 400,\n      backgroundColor: 'red',\n      zIndex: 0\n    }\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.settingWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(SettingLangPicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), React.createElement(SettingThemePicker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })));\n};","map":{"version":3,"sources":["/home/arpo/Pavel/textEncr/reactTextEncript/src/screens/SettingScreen.jsx"],"names":["React","useState","Header","headerTitleEdit","useDispatch","useSelector","SettingLangPicker","SettingThemePicker","SettingScreen","navigation","curentTheme","state","themeReducer","theme","dispatch","currentIntLang","interfaceLanguageReducer","interfaceLanguage","settings","styles","StyleSheet","create","settingItem","alignItems","borderColor","header_color","borderBottomWidth","width","paddingBottom","paddingTop","flexDirection","justifyContent","settingWrapper","settingTitle","fontSize","marginLeft","dropBox","top","right","position","height","backgroundColor","zIndex","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,MAAT;AACA,SACEC,eADF;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAOC,iBAAP;AACA,SAAOC,kBAAP;AAIA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC/C,MAAMC,WAAW,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,YAAN,CAAmBC,KAA9B;AAAA,GAAD,CAA/B;AACA,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,MAAMW,cAAc,GAAGV,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACK,wBAAN,CAA+BC,iBAA1C;AAAA,GAAD,CAAlC;AACAH,EAAAA,QAAQ,CAACX,eAAe,CAACY,cAAc,CAACG,QAAhB,CAAhB,CAAR;AACA,MAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAE/BC,IAAAA,WAAW,EAAE;AACXC,MAAAA,UAAU,EAAE,QADD;AAEXC,MAAAA,WAAW,EAAEd,WAAW,CAACe,YAFd;AAGXC,MAAAA,iBAAiB,EAAE,CAHR;AAIXC,MAAAA,KAAK,EAAE,MAJI;AAKXC,MAAAA,aAAa,EAAE,EALJ;AAMXC,MAAAA,UAAU,EAAE,EAND;AAOXC,MAAAA,aAAa,EAAE,KAPJ;AAQXC,MAAAA,cAAc,EAAE;AARL,KAFkB;AAY/BC,IAAAA,cAAc,EAAE;AACdL,MAAAA,KAAK,EAAE;AADO,KAZe;AAe/BM,IAAAA,YAAY,EAAE;AACZC,MAAAA,QAAQ,EAAE,EADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAfiB;AAoB/BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,GAAG,EAAE,EADE;AAEPC,MAAAA,KAAK,EAAE,CAFA;AAGPC,MAAAA,QAAQ,EAAE,UAHH;AAIPZ,MAAAA,KAAK,EAAE,GAJA;AAKPa,MAAAA,MAAM,EAAE,GALD;AAMPC,MAAAA,eAAe,EAAE,KANV;AAOPC,MAAAA,MAAM,EAAE;AAPD;AApBsB,GAAlB,CAAf;AA8BA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,MAAM,CAACwB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAElC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACa,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFF,CADF;AASD,CA5CM","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View, Text, Picker, TouchableOpacity } from \"react-native\";\nimport { Header } from \"./Header\"\nimport {\n  headerTitleEdit\n} from \"../store/actions/headerTitle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport{SettingLangPicker} from \"./SettingLangPicker\"\nimport{SettingThemePicker} from \"./SettingThemePicker\"\n\n\n\nexport const SettingScreen = ({ navigation }) => {\n  const curentTheme = useSelector((state) => state.themeReducer.theme);\n  const dispatch = useDispatch();\n  const currentIntLang = useSelector((state) => state.interfaceLanguageReducer.interfaceLanguage);\n  dispatch(headerTitleEdit(currentIntLang.settings))\n  const styles = StyleSheet.create({\n \n    settingItem: {\n      alignItems: 'center',\n      borderColor: curentTheme.header_color,\n      borderBottomWidth: 1,\n      width: '100%',\n      paddingBottom: 20,\n      paddingTop: 20,\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    settingWrapper: {\n      width: '100%',\n    },\n    settingTitle: {\n      fontSize: 16,\n      marginLeft: 20,\n  \n    },\n    dropBox: {\n      top: 20,\n      right: 0,\n      position: 'absolute',\n      width: 200,\n      height: 400,\n      backgroundColor: 'red',\n      zIndex: 0,\n    },\n  });\n  return (\n    <View style={styles.container}>\n      <Header navigation={navigation}></Header>\n      <View style={styles.settingWrapper}>\n          <SettingLangPicker/>\n          <SettingThemePicker/>\n      </View>\n    </View>\n  );\n};\n\n/*\n      <View style={styles.settingWrapper}>\n        <View style={styles.settingItem}>\n          <View>\n            <Text style={styles.settingTitle}>{intLang.messageLanguage}</Text>\n          </View>\n          <View>\n            <Picker\n              selectedValue={selectedValue}\n              style={{ height: 50, width: 150 }}\n              onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\n              mode='dropdown'\n            >\n              <Picker.Item label=\"Русский\" value=\"ru\" />\n              <Picker.Item label=\"Другой\" value=\"inne1\" />\n              <Picker.Item label=\"Другой\" value=\"inne2\" />\n              <Picker.Item label=\"Другой\" value=\"inne3\" />\n              <Picker.Item label=\"Другой\" value=\"inne4\" />\n              <Picker.Item label=\"Другой\" value=\"inne5\" />\n            </Picker>\n\n          </View>\n        </View>\n\n        <View style={styles.settingItem}>\n          <View>\n            <Text style={styles.settingTitle}>{intLang.themeColors}</Text>\n          </View>\n          <View>\n            <Picker\n              selectedValue={selectedValue}\n              style={{ height: 50, width: 150 }}\n              onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\n              mode='dropdown'\n            >\n              <Picker.Item label=\"Русский\" value=\"ru\" />\n              <Picker.Item label=\"Другой\" value=\"inne1\" />\n              <Picker.Item label=\"Другой\" value=\"inne2\" />\n              <Picker.Item label=\"Другой\" value=\"inne3\" />\n              <Picker.Item label=\"Другой\" value=\"inne4\" />\n              <Picker.Item label=\"Другой\" value=\"inne5\" />\n            </Picker>\n\n          </View>\n          \n        </View>\n\n\n      </View>\n      */"]},"metadata":{},"sourceType":"module"}