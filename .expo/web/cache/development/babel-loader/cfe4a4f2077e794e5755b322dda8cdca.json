{"ast":null,"code":"var _jsxFileName = \"/home/arpo/Pavel/textEncr/reactTextEncript/src/screens/SettingThemePicker.jsx\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { themeEdit } from \"../store/actions/theme\";\nimport { themes } from \"../data/THEME\";\nexport var SettingThemePicker = function SettingThemePicker() {\n  var currentIntLang = useSelector(function (state) {\n    return state.interfaceLanguageReducer.interfaceLanguage;\n  });\n  var curentTheme = useSelector(function (state) {\n    return state.themeReducer.theme;\n  });\n  var dispatch = useDispatch();\n  console.log('curentTheme', curentTheme);\n\n  var changeTheme = function changeTheme(index) {\n    console.log(index);\n    dispatch(themeEdit(themes[index]));\n  };\n\n  var styles = StyleSheet.create({\n    settingItem: {\n      alignItems: 'center',\n      borderColor: curentTheme.header_color,\n      borderBottomWidth: 1,\n      width: '100%',\n      paddingBottom: 20,\n      paddingTop: 20,\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    settingWrapper: {\n      width: '100%'\n    },\n    settingTitle: {\n      fontSize: 16,\n      marginLeft: 20\n    },\n    dropBox: {\n      top: 20,\n      right: 0,\n      position: 'absolute',\n      width: 200,\n      height: 400,\n      backgroundColor: 'red',\n      zIndex: 0\n    }\n  });\n  return React.createElement(View, {\n    style: styles.settingItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.settingTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, currentIntLang.themeColors)), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker, {\n    selectedValue: curentTheme.title,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return changeTheme(itemValue);\n    },\n    mode: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, themes.map(function (item, index) {\n    return React.createElement(Picker.Item, {\n      label: item.title,\n      key: item.title,\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    });\n  }))));\n};","map":{"version":3,"sources":["/home/arpo/Pavel/textEncr/reactTextEncript/src/screens/SettingThemePicker.jsx"],"names":["React","useDispatch","useSelector","themeEdit","themes","SettingThemePicker","currentIntLang","state","interfaceLanguageReducer","interfaceLanguage","curentTheme","themeReducer","theme","dispatch","console","log","changeTheme","index","styles","StyleSheet","create","settingItem","alignItems","borderColor","header_color","borderBottomWidth","width","paddingBottom","paddingTop","flexDirection","justifyContent","settingWrapper","settingTitle","fontSize","marginLeft","dropBox","top","right","position","height","backgroundColor","zIndex","themeColors","title","itemValue","itemIndex","map","item"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View, Text, Picker } from \"react-native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { themeEdit } from \"../store/actions/theme\";\nimport { themes } from \"../data/THEME\"\n\n\nexport const SettingThemePicker = () => {\n  const currentIntLang = useSelector((state) => state.interfaceLanguageReducer.interfaceLanguage);\n  const curentTheme = useSelector((state) => state.themeReducer.theme);\n  const dispatch = useDispatch();\n  console.log('curentTheme',curentTheme)\n \n  const changeTheme = (index) => {\n    console.log(index)\n   dispatch(themeEdit(themes[index]))\n    //    let key = languages[index].key   \n    //    dispatch(interfaceLanguageEdit(langInt[key]))\n  }\n  const styles = StyleSheet.create({\n    settingItem: {\n      alignItems: 'center',\n      borderColor: curentTheme.header_color,\n      borderBottomWidth: 1,\n      width: '100%',\n      paddingBottom: 20,\n      paddingTop: 20,\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    settingWrapper: {\n      width: '100%',\n    },\n    settingTitle: {\n      fontSize: 16,\n      marginLeft: 20,\n    },\n    dropBox: {\n      top: 20,\n      right: 0,\n      position: 'absolute',\n      width: 200,\n      height: 400,\n      backgroundColor: 'red',\n      zIndex: 0,\n    },\n  });\n  return (\n\n    <View style={styles.settingItem}>\n      <View>\n        <Text style={styles.settingTitle}>{currentIntLang.themeColors}</Text>\n      </View>\n      <View>\n        <Picker\n          selectedValue={curentTheme.title}\n          style={{ height: 50, width: 150 }}\n          onValueChange={(itemValue, itemIndex) => changeTheme(itemValue)}\n          mode='dropdown'\n        >\n    {\n      themes.map((item,index)=>(<Picker.Item label={item.title} key={item.title} value={index} />))\n    }\n        </Picker>\n\n      </View>\n\n    </View>\n  );\n};\n\n\n\n\n/*{\n  for (let key in themes)\n  {\n    return\n    (<Picker.Item label={item.title} key={item.key} value={item.key} />)\n  } \n  \n}\n*/"]},"metadata":{},"sourceType":"module"}