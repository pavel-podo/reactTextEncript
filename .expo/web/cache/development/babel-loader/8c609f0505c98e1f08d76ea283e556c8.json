{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/arpo/Pavel/textEncr/reactTextEncript/src/screens/MainScreen.jsx\";\nimport { Octicons } from \"@expo/vector-icons\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport { THEME } from \"../THEME\";\nimport { keyEedit, textEdit, finishTextEdit, deEncriptTextEdit } from \"../store/actions/main\";\nimport { MessageBox } from \"./mesageBox\";\nimport { ChekingFinishText } from \"./ChekingFinishText\";\nimport { Entypo } from '@expo/vector-icons';\nimport { lang } from \"../lang/lang\";\nexport var MainScreen = function MainScreen() {\n  var _useState = useState({\n    message: \"\",\n    bgColor: \"\",\n    textColor: \"\",\n    time: 5000\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorMessage = _useState2[0],\n      setErrorMessage = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showCodeButton = _useState4[0],\n      setShowCodeButton = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showKey = _useState6[0],\n      setShowKey = _useState6[1];\n\n  var dispatch = useDispatch();\n  var codeStatus = useSelector(function (state) {\n    return state.mainReducer.codeStatus;\n  });\n  var currentLang = useSelector(function (state) {\n    return state.mainReducer.askiiCod;\n  });\n  var mainText = useSelector(function (state) {\n    return state.mainReducer.startText;\n  });\n  var key = useSelector(function (state) {\n    return state.mainReducer.key;\n  });\n  var decodingText = useSelector(function (state) {\n    return state.mainReducer.deEncriptText;\n  });\n  var finishText = useSelector(function (state) {\n    console.log(\"store - \", state);\n    return state.mainReducer.finishText;\n  });\n\n  var onShare = function onShare() {\n    var result;\n    return _regeneratorRuntime.async(function onShare$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Share.share({\n              message: finishText\n            }));\n\n          case 3:\n            result = _context.sent;\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"share error\", _context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var pasteText = function pasteText() {\n    var text;\n    return _regeneratorRuntime.async(function pasteText$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Clipboard.getString());\n\n          case 2:\n            text = _context2.sent;\n            dispatch(textEdit(text));\n            clearInputs();\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var clearAll = function clearAll() {\n    dispatch(keyEedit(''));\n    dispatch(textEdit(''));\n    dispatch(finishTextEdit(''));\n    dispatch(deEncriptTextEdit(''));\n  };\n\n  var clearInputs = function clearInputs() {\n    console.log('-----clear------');\n    dispatch(deEncriptTextEdit(''));\n    dispatch(finishTextEdit(''));\n  };\n\n  function textToArr(text) {\n    var arr = [];\n    var fullArr = [];\n\n    for (var i = 0; i < text.length; i++) {\n      var simbol = text[i];\n      var nSimbol = currentLang.indexOf(simbol);\n      arr.push(nSimbol);\n      fullArr.push({\n        s: simbol,\n        n: nSimbol\n      });\n    }\n\n    return arr;\n  }\n\n  function codeText(textSimArray, keySimArray) {\n    var i = -1,\n        long = currentLang.length;\n    var retArr = textSimArray.map(function (e) {\n      i++;\n      i > keySimArray.length - 1 ? i = 0 : false;\n      var result = (e + keySimArray[i]) % long;\n      return result;\n    });\n    return retArr;\n  }\n\n  function arrToText(arr) {\n    var str = \"\";\n    arr.forEach(function (element) {\n      str = str + currentLang[element];\n    });\n    return str;\n  }\n\n  function deCodeText(textArr, keyArr) {\n    var i = -1;\n    var long = currentLang.length;\n    var result = textArr.map(function (e) {\n      i++;\n      i == keyArr.length ? i = 0 : false;\n      var r = long + e - keyArr[i];\n\n      if (r >= long) {\n        r = r % long;\n      } else {\n        false;\n      }\n\n      return r;\n    });\n    return result;\n  }\n\n  function changeSymbols(text, symbols) {\n    for (var i = 0; i < text.length; i++) {\n      if (symbols.indexOf(text[i]) < 0) {\n        return text[i];\n        break;\n      }\n    }\n\n    return false;\n  }\n\n  function showMessage(text, bgColor, textColor, time) {\n    console.log('show message', text, bgColor, textColor, time);\n    setErrorMessage({\n      message: text,\n      bgColor: bgColor,\n      textColor: textColor\n    });\n    setTimeout(function () {\n      return setErrorMessage({\n        message: \"\"\n      });\n    }, time);\n  }\n\n  function mainTest(text, key) {\n    var textArray = textToArr(text),\n        keyArray = textToArr(key),\n        testCodeText = codeText(textArray, keyArray),\n        testResultCode = arrToText(testCodeText),\n        CodeSimbols = textToArr(testResultCode),\n        decode = deCodeText(CodeSimbols, keyArray),\n        decodetText = arrToText(decode);\n\n    if (text == decodetText) {\n      console.log(\"text - \" + text + \"\\n      key - \" + key + \"\\n      code - \" + testResultCode + \"\\n      decode - \" + decodetText);\n    } else {\n      console.log(\"----START----\");\n      console.log(\"test text - \", text);\n      console.log(\"array symbol text - \", textArray);\n      console.log(\"test key - \", key);\n      console.log(\"currentLang - \", currentLang.length);\n      console.log(\"testCodeText\", testCodeText);\n      console.log(\"testResultCode\", testResultCode);\n      console.log(\"------------------\");\n      console.log(\"testDecode symbol\", CodeSimbols);\n      console.log(\"testDecodeText\", decode);\n      console.log(\"decodetText\", decodetText);\n      console.log(\"----FINISH----\");\n    }\n  }\n\n  var _onChangeText = function onChangeText(text) {\n    clearInputs();\n    dispatch(textEdit(text));\n  };\n\n  var onChangeKey = function onChangeKey(text) {\n    clearInputs();\n    dispatch(keyEedit(text));\n\n    if (text.length < 3) {\n      setShowCodeButton(true);\n    } else {\n      setShowCodeButton(false);\n    }\n  };\n\n  var onPressDeCode = function onPressDeCode() {\n    var textArr = textToArr(mainText),\n        keyArr = textToArr(key),\n        codeArr = deCodeText(textArr, keyArr),\n        codingText = arrToText(codeArr);\n    dispatch(finishTextEdit(codingText));\n  };\n\n  var onPressCode = function onPressCode() {\n    if (mainText.length > 500) {\n      showMessage('Длина текста на может \\n быть больше 500 символов', 'grey', 'white', 'rgba(128,128,128,0.5)');\n      return;\n    }\n\n    var i = changeSymbols(mainText, currentLang);\n\n    if (i !== false) {\n      console.log('Неправильный символ - ' + i.charCodeAt());\n      showMessage('Неправильный символ ' + i, 'rgba(255,0,0,0.7)', 'white', 2000);\n      return;\n    }\n\n    var textArr = textToArr(mainText),\n        keyArr = textToArr(key),\n        codeArr = codeText(textArr, keyArr),\n        codingText = arrToText(codeArr);\n    dispatch(finishTextEdit(codingText));\n    var decodeArr = deCodeText(codeArr, keyArr),\n        changeText = arrToText(decodeArr);\n    dispatch(deEncriptTextEdit(changeText));\n  };\n\n  var showPaswordTougle = function showPaswordTougle() {\n    showKey ? setShowKey(false) : setShowKey(true);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    elevation: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, errorMessage.message !== \"\" ? React.createElement(MessageBox, {\n    text: errorMessage.message,\n    bgColor: errorMessage.bgColor,\n    textColor: errorMessage.textColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }) : false, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, React.createElement(Entypo, {\n    name: \"arrow-with-circle-left\",\n    size: 24,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, React.createElement(Entypo, {\n    name: \"arrow-with-circle-left\",\n    size: 24,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableOpacity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  })), React.createElement(ScrollView, {\n    style: styles.scroll,\n    keyboardShouldPersistTaps: \"handled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.mainWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    numberOfLines: 4,\n    multiline: true,\n    value: mainText,\n    placeholder: \"Введите текст...\",\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.inputIconWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.touchInputIcon,\n    onPress: function onPress() {\n      return pasteText();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"paste\",\n    size: 24,\n    color: THEME.header_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  })))), React.createElement(View, {\n    style: styles.inputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    secureTextEntry: showKey ? false : true,\n    value: key,\n    style: styles.input,\n    placeholder: \"Введите ключ...\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(text) {\n      return onChangeKey(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.inputIconWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.touchInputIcon,\n    onPress: function onPress() {\n      return showPaswordTougle();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }, showKey ? React.createElement(Octicons, {\n    name: \"eye\",\n    size: 24,\n    color: THEME.header_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  }) : React.createElement(Octicons, {\n    name: \"eye-closed\",\n    size: 24,\n    color: THEME.header_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  })))), React.createElement(View, {\n    style: styles.btnWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 11\n    }\n  }, codeStatus == 'code' ? React.createElement(View, {\n    style: styles.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }, React.createElement(Button, {\n    title: \"\\u0428\\u0438\\u0444\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n    onPress: onPressCode,\n    disabled: showCodeButton,\n    color: THEME.btn_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  })) : false, codeStatus == 'deCode' ? React.createElement(View, {\n    style: styles.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }, React.createElement(Button, {\n    title: \"\\u0420\\u0430\\u0437\\u0448\\u0438\\u0444\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n    onPress: onPressDeCode,\n    color: THEME.btn_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }\n  })) : false, React.createElement(View, {\n    style: styles.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\",\n    onPress: function onPress() {\n      return clearAll();\n    },\n    color: THEME.btn_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.inputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    numberOfLines: 4,\n    multiline: true,\n    placeholder: \"Результат...\",\n    editable: false,\n    value: finishText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.inputIconWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.touchInputIcon,\n    onPress: function onPress() {\n      return onShare();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"share-alt\",\n    size: 24,\n    color: THEME.header_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 17\n    }\n  })))), React.createElement(View, {\n    style: styles.btnWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"\\u041A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n    color: THEME.btn_color,\n    style: {\n      padding: 30,\n      color: 'green'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }))), decodingText ? React.createElement(ChekingFinishText, {\n    decodingText: decodingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 28\n    }\n  }) : false)));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.bg_color,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  header: {\n    width: \"100%\",\n    height: 80,\n    backgroundColor: THEME.header_color,\n    marginBottom: 5\n  },\n  scroll: {\n    width: \"100%\"\n  },\n  mainWrapper: {\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    width: \"100%\",\n    backgroundColor: THEME.bg_color\n  },\n  input: {\n    width: \"85%\"\n  },\n  inputWrapper: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 5,\n    borderRadius: 8,\n    backgroundColor: \"#fff\",\n    width: \"80%\",\n    marginVertical: 8,\n    paddingHorizontal: 5\n  },\n  inputIconWrapper: {\n    width: \"14%\",\n    height: \"100%\"\n  },\n  touchInputIcon: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  btnWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: \"80%\",\n    marginVertical: 8\n  },\n  btn: {\n    width: \"45%\"\n  },\n  text: {\n    color: \"white\"\n  },\n  modalMessage: {\n    backgroundColor: \"#d3d3d3cc\",\n    padding: 10,\n    borderRadius: 5,\n    position: \"absolute\",\n    bottom: 50\n  },\n  errorBlock: {\n    backgroundColor: \"#BF3030cc\",\n    position: \"absolute\",\n    padding: 10,\n    borderRadius: 8,\n    zIndex: 200\n  }\n});\n\nvar changeLangArr = function changeLangArr(text) {\n  var mapArray = [];\n\n  for (var i = 0; i < str.length; i++) {\n    var arr = {\n      i: i,\n      str: str[i]\n    };\n    mapArray.push(arr);\n  }\n\n  console.log(mapArray);\n  console.log(str);\n};","map":{"version":3,"sources":["/home/arpo/Pavel/textEncr/reactTextEncript/src/screens/MainScreen.jsx"],"names":["Octicons","FontAwesome5","React","useEffect","useRef","useState","useDispatch","useSelector","THEME","keyEedit","textEdit","finishTextEdit","deEncriptTextEdit","MessageBox","ChekingFinishText","Entypo","lang","MainScreen","message","bgColor","textColor","time","errorMessage","setErrorMessage","showCodeButton","setShowCodeButton","showKey","setShowKey","dispatch","codeStatus","state","mainReducer","currentLang","askiiCod","mainText","startText","key","decodingText","deEncriptText","finishText","console","log","onShare","Share","share","result","pasteText","Clipboard","getString","text","clearInputs","clearAll","textToArr","arr","fullArr","i","length","simbol","nSimbol","indexOf","push","s","n","codeText","textSimArray","keySimArray","long","retArr","map","e","arrToText","str","forEach","element","deCodeText","textArr","keyArr","r","changeSymbols","symbols","showMessage","setTimeout","mainTest","textArray","keyArray","testCodeText","testResultCode","CodeSimbols","decode","decodetText","onChangeText","onChangeKey","onPressDeCode","codeArr","codingText","onPressCode","charCodeAt","decodeArr","changeText","showPaswordTougle","styles","container","header","scroll","mainWrapper","inputWrapper","input","inputIconWrapper","touchInputIcon","header_color","btnWrapper","btn","btn_color","padding","color","StyleSheet","create","flex","backgroundColor","bg_color","alignItems","justifyContent","width","height","marginBottom","flexDirection","borderRadius","marginVertical","paddingHorizontal","modalMessage","position","bottom","errorBlock","zIndex","changeLangArr","mapArray"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;;;;;;;AAYA,SAASC,KAAT;AACA,SACEC,QADF,EAEEC,QAFF,EAGEC,cAHF,EAIEC,iBAJF;AAMA,SAASC,UAAT;AACA,SAASC,iBAAT;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,IAAT;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACUZ,QAAQ,CAAC;AAC/Ca,IAAAA,OAAO,EAAE,EADsC;AAE/CC,IAAAA,OAAO,EAAE,EAFsC;AAG/CC,IAAAA,SAAS,EAAE,EAHoC;AAI/CC,IAAAA,IAAI,EAAE;AAJyC,GAAD,CADlB;AAAA;AAAA,MACvBC,YADuB;AAAA,MACTC,eADS;;AAAA,mBAOclB,QAAQ,CAAC,IAAD,CAPtB;AAAA;AAAA,MAOvBmB,cAPuB;AAAA,MAOPC,iBAPO;;AAAA,mBAQApB,QAAQ,CAAC,KAAD,CARR;AAAA;AAAA,MAQvBqB,OARuB;AAAA,MAQdC,UARc;;AAS9B,MAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AAMA,MAAMuB,UAAU,GAAGtB,WAAW,CAAC,UAACuB,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBF,UAA7B;AAAA,GAAD,CAA9B;AACA,MAAMG,WAAW,GAAGzB,WAAW,CAAC,UAACuB,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBE,QAA7B;AAAA,GAAD,CAA/B;AACA,MAAMC,QAAQ,GAAG3B,WAAW,CAAC,UAACuB,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBI,SAA7B;AAAA,GAAD,CAA5B;AACA,MAAMC,GAAG,GAAG7B,WAAW,CAAC,UAACuB,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBK,GAA7B;AAAA,GAAD,CAAvB;AACA,MAAMC,YAAY,GAAG9B,WAAW,CAAC,UAACuB,KAAD;AAAA,WAAWA,KAAK,CAACC,WAAN,CAAkBO,aAA7B;AAAA,GAAD,CAAhC;AACA,MAAMC,UAAU,GAAGhC,WAAW,CAAC,UAACuB,KAAD,EAAW;AACxCU,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,KAAxB;AACA,WAAOA,KAAK,CAACC,WAAN,CAAkBQ,UAAzB;AACD,GAH6B,CAA9B;;AAKA,MAAMG,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESC,KAAK,CAACC,KAAN,CAAY;AAC/B1B,cAAAA,OAAO,EAAEqB;AADsB,aAAZ,CAFT;;AAAA;AAENM,YAAAA,MAFM;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMZL,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAUA,MAAMK,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGC,SAAS,CAACC,SAAV,EADH;;AAAA;AACVC,YAAAA,IADU;AAEhBrB,YAAAA,QAAQ,CAAClB,QAAQ,CAACuC,IAAD,CAAT,CAAR;AACAC,YAAAA,WAAW;;AAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAKA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAK;AACpBvB,IAAAA,QAAQ,CAACnB,QAAQ,CAAC,EAAD,CAAT,CAAR;AACAmB,IAAAA,QAAQ,CAAClB,QAAQ,CAAC,EAAD,CAAT,CAAR;AACAkB,IAAAA,QAAQ,CAACjB,cAAc,CAAC,EAAD,CAAf,CAAR;AACAiB,IAAAA,QAAQ,CAAChB,iBAAiB,CAAC,EAAD,CAAlB,CAAR;AACD,GALD;;AAMA,MAAMsC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBV,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAb,IAAAA,QAAQ,CAAChB,iBAAiB,CAAC,EAAD,CAAlB,CAAR;AACAgB,IAAAA,QAAQ,CAACjB,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,GAJD;;AAKA,WAASyC,SAAT,CAAmBH,IAAnB,EAAyB;AACvB,QAAII,GAAG,GAAG,EAAV;AACA,QAAIC,OAAO,GAAG,EAAd;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAIE,MAAM,GAAGR,IAAI,CAACM,CAAD,CAAjB;AACA,UAAIG,OAAO,GAAG1B,WAAW,CAAC2B,OAAZ,CAAoBF,MAApB,CAAd;AACAJ,MAAAA,GAAG,CAACO,IAAJ,CAASF,OAAT;AACAJ,MAAAA,OAAO,CAACM,IAAR,CAAa;AAAEC,QAAAA,CAAC,EAAEJ,MAAL;AAAaK,QAAAA,CAAC,EAAEJ;AAAhB,OAAb;AACD;;AACD,WAAOL,GAAP;AACD;;AACD,WAASU,QAAT,CAAkBC,YAAlB,EAAgCC,WAAhC,EAA6C;AAC3C,QAAIV,CAAC,GAAG,CAAC,CAAT;AAAA,QACEW,IAAI,GAAGlC,WAAW,CAACwB,MADrB;AAEA,QAAIW,MAAM,GAAGH,YAAY,CAACI,GAAb,CAAiB,UAACC,CAAD,EAAO;AACnCd,MAAAA,CAAC;AACDA,MAAAA,CAAC,GAAGU,WAAW,CAACT,MAAZ,GAAqB,CAAzB,GAA8BD,CAAC,GAAG,CAAlC,GAAuC,KAAvC;AAEA,UAAIV,MAAM,GAAG,CAACwB,CAAC,GAAGJ,WAAW,CAACV,CAAD,CAAhB,IAAuBW,IAApC;AACA,aAAOrB,MAAP;AACD,KANY,CAAb;AAQA,WAAOsB,MAAP;AACD;;AACD,WAASG,SAAT,CAAmBjB,GAAnB,EAAwB;AACtB,QAAIkB,GAAG,GAAG,EAAV;AACAlB,IAAAA,GAAG,CAACmB,OAAJ,CAAY,UAACC,OAAD,EAAa;AACvBF,MAAAA,GAAG,GAAGA,GAAG,GAAGvC,WAAW,CAACyC,OAAD,CAAvB;AACD,KAFD;AAGA,WAAOF,GAAP;AACD;;AACD,WAASG,UAAT,CAAoBC,OAApB,EAA6BC,MAA7B,EAAqC;AACnC,QAAIrB,CAAC,GAAG,CAAC,CAAT;AACA,QAAIW,IAAI,GAAGlC,WAAW,CAACwB,MAAvB;AACA,QAAIX,MAAM,GAAG8B,OAAO,CAACP,GAAR,CAAY,UAACC,CAAD,EAAO;AAC9Bd,MAAAA,CAAC;AACDA,MAAAA,CAAC,IAAIqB,MAAM,CAACpB,MAAZ,GAAsBD,CAAC,GAAG,CAA1B,GAA+B,KAA/B;AAEA,UAAIsB,CAAC,GAAGX,IAAI,GAAGG,CAAP,GAAWO,MAAM,CAACrB,CAAD,CAAzB;;AACA,UAAIsB,CAAC,IAAIX,IAAT,EAAe;AACbW,QAAAA,CAAC,GAAGA,CAAC,GAAGX,IAAR;AACD,OAFD,MAEO;AACL;AACD;;AACD,aAAOW,CAAP;AACD,KAXY,CAAb;AAYA,WAAOhC,MAAP;AACD;;AACD,WAASiC,aAAT,CAAuB7B,IAAvB,EAA6B8B,OAA7B,EAAsC;AACpC,SAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAIwB,OAAO,CAACpB,OAAR,CAAgBV,IAAI,CAACM,CAAD,CAApB,IAA2B,CAA/B,EAAkC;AAChC,eAAON,IAAI,CAACM,CAAD,CAAX;AACA;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AACD,WAASyB,WAAT,CAAqB/B,IAArB,EAA2B9B,OAA3B,EAAoCC,SAApC,EAA+CC,IAA/C,EAAqD;AACnDmB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,IAA5B,EAAkC9B,OAAlC,EAA2CC,SAA3C,EAAsDC,IAAtD;AACAE,IAAAA,eAAe,CAAC;AACdL,MAAAA,OAAO,EAAE+B,IADK;AAEd9B,MAAAA,OAAO,EAAEA,OAFK;AAGdC,MAAAA,SAAS,EAAEA;AAHG,KAAD,CAAf;AAKA6D,IAAAA,UAAU,CAAC;AAAA,aAAM1D,eAAe,CAAC;AAAEL,QAAAA,OAAO,EAAE;AAAX,OAAD,CAArB;AAAA,KAAD,EAAyCG,IAAzC,CAAV;AAED;;AACD,WAAS6D,QAAT,CAAkBjC,IAAlB,EAAwBb,GAAxB,EAA6B;AAc3B,QACE+C,SAAS,GAAG/B,SAAS,CAACH,IAAD,CADvB;AAAA,QAEEmC,QAAQ,GAAGhC,SAAS,CAAChB,GAAD,CAFtB;AAAA,QAGEiD,YAAY,GAAGtB,QAAQ,CAACoB,SAAD,EAAYC,QAAZ,CAHzB;AAAA,QAIEE,cAAc,GAAGhB,SAAS,CAACe,YAAD,CAJ5B;AAAA,QAMEE,WAAW,GAAGnC,SAAS,CAACkC,cAAD,CANzB;AAAA,QAOEE,MAAM,GAAGd,UAAU,CAACa,WAAD,EAAcH,QAAd,CAPrB;AAAA,QAQEK,WAAW,GAAGnB,SAAS,CAACkB,MAAD,CARzB;;AASA,QAAIvC,IAAI,IAAIwC,WAAZ,EAAyB;AACvBjD,MAAAA,OAAO,CAACC,GAAR,aAAsBQ,IAAtB,sBACQb,GADR,uBAESkD,cAFT,yBAGWG,WAHX;AAID,KALD,MAKO;AACLjD,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,IAA5B;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC0C,SAApC;AACA3C,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,GAA3B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BT,WAAW,CAACwB,MAA1C;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B4C,YAA5B;AACA7C,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B6C,cAA9B;AACA9C,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC8C,WAAjC;AACA/C,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B+C,MAA9B;AACAhD,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BgD,WAA3B;AACAjD,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF;;AAED,MAAMiD,aAAY,GAAG,SAAfA,YAAe,CAACzC,IAAD,EAAU;AAE7BC,IAAAA,WAAW;AACXtB,IAAAA,QAAQ,CAAClB,QAAQ,CAACuC,IAAD,CAAT,CAAR;AACD,GAJD;;AAKA,MAAM0C,WAAW,GAAG,SAAdA,WAAc,CAAC1C,IAAD,EAAU;AAC5BC,IAAAA,WAAW;AACXtB,IAAAA,QAAQ,CAACnB,QAAQ,CAACwC,IAAD,CAAT,CAAR;;AACA,QAAIA,IAAI,CAACO,MAAL,GAAc,CAAlB,EAAqB;AACnB/B,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,KAFD,MAEO;AACLA,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF,GARD;;AAUA,MAAImE,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAIjB,OAAO,GAAGvB,SAAS,CAAClB,QAAD,CAAvB;AAAA,QACE0C,MAAM,GAAGxB,SAAS,CAAChB,GAAD,CADpB;AAAA,QAEEyD,OAAO,GAAGnB,UAAU,CAACC,OAAD,EAAUC,MAAV,CAFtB;AAAA,QAGEkB,UAAU,GAAGxB,SAAS,CAACuB,OAAD,CAHxB;AAIAjE,IAAAA,QAAQ,CAACjB,cAAc,CAACmF,UAAD,CAAf,CAAR;AAED,GAPD;;AASA,MAAIC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAI7D,QAAQ,CAACsB,MAAT,GAAkB,GAAtB,EAA2B;AACzBwB,MAAAA,WAAW,CAAC,mDAAD,EAAsD,MAAtD,EAA8D,OAA9D,EAAuE,uBAAvE,CAAX;AACA;AACD;;AACD,QAAIzB,CAAC,GAAGuB,aAAa,CAAC5C,QAAD,EAAWF,WAAX,CAArB;;AACA,QAAIuB,CAAC,KAAK,KAAV,EAAiB;AACff,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2Bc,CAAC,CAACyC,UAAF,EAAvC;AACAhB,MAAAA,WAAW,CAAC,yBAAyBzB,CAA1B,EAA6B,mBAA7B,EAAkD,OAAlD,EAA2D,IAA3D,CAAX;AACA;AACD;;AAED,QAAIoB,OAAO,GAAGvB,SAAS,CAAClB,QAAD,CAAvB;AAAA,QACE0C,MAAM,GAAGxB,SAAS,CAAChB,GAAD,CADpB;AAAA,QAEEyD,OAAO,GAAG9B,QAAQ,CAACY,OAAD,EAAUC,MAAV,CAFpB;AAAA,QAGEkB,UAAU,GAAGxB,SAAS,CAACuB,OAAD,CAHxB;AAKAjE,IAAAA,QAAQ,CAACjB,cAAc,CAACmF,UAAD,CAAf,CAAR;AAGA,QAAIG,SAAS,GAAGvB,UAAU,CAACmB,OAAD,EAAUjB,MAAV,CAA1B;AAAA,QACEsB,UAAU,GAAG5B,SAAS,CAAC2B,SAAD,CADxB;AAGArE,IAAAA,QAAQ,CAAChB,iBAAiB,CAACsF,UAAD,CAAlB,CAAR;AAED,GAzBD;;AA2BA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BzE,IAAAA,OAAO,GAAGC,UAAU,CAAC,KAAD,CAAb,GAAuBA,UAAU,CAAC,IAAD,CAAxC;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEyE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAA4B,IAAA,SAAS,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhF,YAAY,CAACJ,OAAb,KAAyB,EAAzB,GACC,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEI,YAAY,CAACJ,OADrB;AAEE,IAAA,OAAO,EAAEI,YAAY,CAACH,OAFxB;AAGE,IAAA,SAAS,EAAEG,YAAY,CAACF,SAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAOG,KARN,EAUI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,wBAAb;AAAsC,IAAA,IAAI,EAAE,EAA5C;AAAgD,IAAA,KAAK,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAVJ,EAaI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,wBAAb;AAAsC,IAAA,IAAI,EAAE,EAA5C;AAAgD,IAAA,KAAK,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbJ,EAiBE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,EAoBE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEgF,MAAM,CAACG,MAA1B;AAAkC,IAAA,yBAAyB,EAAC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEL,MAAM,CAACM,KADhB;AAEE,IAAA,aAAa,EAAE,CAFjB;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,KAAK,EAAExE,QAJT;AAKE,IAAA,WAAW,EAAE,kBALf;AAME,IAAA,YAAY,EAAE,sBAACe,IAAD;AAAA,aAAUyC,aAAY,CAACzC,IAAD,CAAtB;AAAA,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmD,MAAM,CAACO,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEP,MAAM,CAACQ,cADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAM9D,SAAS,EAAf;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,KAAK,EAAEtC,KAAK,CAACqG,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CATF,CADF,EAuBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACK,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAE/E,OAAO,GAAG,KAAH,GAAW,IADrC;AAEE,IAAA,KAAK,EAAIU,GAFX;AAGE,IAAA,KAAK,EAAEgE,MAAM,CAACM,KAHhB;AAIE,IAAA,WAAW,EAAE,iBAJf;AAKE,IAAA,cAAc,EAAE,MALlB;AAOE,IAAA,YAAY,EAAE,sBAACzD,IAAD;AAAA,aAAU0C,WAAW,CAAC1C,IAAD,CAArB;AAAA,KAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmD,MAAM,CAACO,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEP,MAAM,CAACQ,cADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMT,iBAAiB,EAAvB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGzE,OAAO,GACN,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,KAAf;AAAqB,IAAA,IAAI,EAAE,EAA3B;AAA+B,IAAA,KAAK,EAAElB,KAAK,CAACqG,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAGJ,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,KAAK,EAAErG,KAAK,CAACqG,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPN,CADF,CAVF,CAvBF,EAkDE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjF,UAAU,IAAI,MAAd,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEuE,MAAM,CAACW,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,wDADR;AAEE,IAAA,OAAO,EAAEhB,WAFX;AAGE,IAAA,QAAQ,EAAEvE,cAHZ;AAIE,IAAA,KAAK,EAAEhB,KAAK,CAACwG,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GASG,KAVN,EAWGnF,UAAU,IAAI,QAAd,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEuE,MAAM,CAACW,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,0EADR;AAEE,IAAA,OAAO,EAAEnB,aAFX;AAGE,IAAA,KAAK,EAAEpF,KAAK,CAACwG,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAQG,KAnBN,EAoBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACW,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,kDADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAM5D,QAAQ,EAAd;AAAA,KAFX;AAGE,IAAA,KAAK,EAAE3C,KAAK,CAACwG,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApBF,CAlDF,EA8EE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACK,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEL,MAAM,CAACM,KADhB;AAEE,IAAA,aAAa,EAAE,CAFjB;AAGE,IAAA,SAAS,MAHX;AAIE,IAAA,WAAW,EAAE,cAJf;AAKE,IAAA,QAAQ,EAAE,KALZ;AAME,IAAA,KAAK,EAAEnE,UANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE6D,MAAM,CAACO,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEP,MAAM,CAACQ,cADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMlE,OAAO,EAAb;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,KAAK,EAAElC,KAAK,CAACqG,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CATF,CA9EF,EAoGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,8DADR;AAGE,IAAA,KAAK,EAAEvG,KAAK,CAACwG,SAHf;AAIE,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC,EAAT;AAAYC,MAAAA,KAAK,EAAC;AAAlB,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,CApGF,EA+GG7E,YAAY,GAAI,oBAAC,iBAAD;AAAmB,IAAA,YAAY,EAAEA,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GAA2E,KA/G1F,CADF,CApBF,CADF;AA6ID,CAvWM;AAyWP,IAAM+D,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC/Bf,EAAAA,SAAS,EAAE;AACTgB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE9G,KAAK,CAAC+G,QAFd;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,KAAK,EAAE;AALE,GADoB;AAQ/BpB,EAAAA,MAAM,EAAE;AACNoB,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNL,IAAAA,eAAe,EAAE9G,KAAK,CAACqG,YAHjB;AAINe,IAAAA,YAAY,EAAE;AAJR,GARuB;AAc/BrB,EAAAA,MAAM,EAAE;AACNmB,IAAAA,KAAK,EAAE;AADD,GAduB;AAiB/BlB,EAAAA,WAAW,EAAE;AACXgB,IAAAA,UAAU,EAAE,QADD;AAEXF,IAAAA,eAAe,EAAE,MAFN;AAGXI,IAAAA,KAAK,EAAE,MAHI;AAIXJ,IAAAA,eAAe,EAAE9G,KAAK,CAAC+G;AAJZ,GAjBkB;AAuB/Bb,EAAAA,KAAK,EAAE;AACLgB,IAAAA,KAAK,EAAE;AADF,GAvBwB;AA2B/BjB,EAAAA,YAAY,EAAE;AACZe,IAAAA,UAAU,EAAE,QADA;AAEZK,IAAAA,aAAa,EAAE,KAFH;AAGZJ,IAAAA,cAAc,EAAE,eAHJ;AAIZR,IAAAA,OAAO,EAAE,CAJG;AAKZa,IAAAA,YAAY,EAAE,CALF;AAMZR,IAAAA,eAAe,EAAE,MANL;AAOZI,IAAAA,KAAK,EAAE,KAPK;AAQZK,IAAAA,cAAc,EAAE,CARJ;AASZC,IAAAA,iBAAiB,EAAE;AATP,GA3BiB;AAsC/BrB,EAAAA,gBAAgB,EAAE;AAChBe,IAAAA,KAAK,EAAE,KADS;AAEhBC,IAAAA,MAAM,EAAE;AAFQ,GAtCa;AA0C/Bf,EAAAA,cAAc,EAAE;AACdS,IAAAA,IAAI,EAAE,CADQ;AAEdI,IAAAA,cAAc,EAAE,QAFF;AAGdD,IAAAA,UAAU,EAAE;AAHE,GA1Ce;AA+C/BV,EAAAA,UAAU,EAAE;AACVe,IAAAA,aAAa,EAAE,KADL;AAEVJ,IAAAA,cAAc,EAAE,cAFN;AAGVC,IAAAA,KAAK,EAAE,KAHG;AAIVK,IAAAA,cAAc,EAAC;AAJL,GA/CmB;AAqD/BhB,EAAAA,GAAG,EAAE;AACHW,IAAAA,KAAK,EAAE;AADJ,GArD0B;AAwD/BzE,EAAAA,IAAI,EAAE;AACJiE,IAAAA,KAAK,EAAE;AADH,GAxDyB;AA2D/Be,EAAAA,YAAY,EAAE;AACZX,IAAAA,eAAe,EAAE,WADL;AAEZL,IAAAA,OAAO,EAAE,EAFG;AAGZa,IAAAA,YAAY,EAAE,CAHF;AAIZI,IAAAA,QAAQ,EAAE,UAJE;AAKZC,IAAAA,MAAM,EAAE;AALI,GA3DiB;AAkE/BC,EAAAA,UAAU,EAAE;AACVd,IAAAA,eAAe,EAAE,WADP;AAEVY,IAAAA,QAAQ,EAAE,UAFA;AAGVjB,IAAAA,OAAO,EAAE,EAHC;AAIVa,IAAAA,YAAY,EAAE,CAJJ;AAKVO,IAAAA,MAAM,EAAE;AALE;AAlEmB,CAAlB,CAAf;;AA2EA,IAAIC,aAAa,GAAG,SAAhBA,aAAgB,CAACrF,IAAD,EAAU;AAC5B,MAAIsF,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIhF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,GAAG,CAACf,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,QAAIF,GAAG,GAAG;AAAEE,MAAAA,CAAC,EAADA,CAAF;AAAKgB,MAAAA,GAAG,EAAEA,GAAG,CAAChB,CAAD;AAAb,KAAV;AACAgF,IAAAA,QAAQ,CAAC3E,IAAT,CAAcP,GAAd;AACD;;AACDb,EAAAA,OAAO,CAACC,GAAR,CAAY8F,QAAZ;AACA/F,EAAAA,OAAO,CAACC,GAAR,CAAY8B,GAAZ;AACD,CARD","sourcesContent":["import { Octicons } from \"@expo/vector-icons\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Clipboard,\n  StyleSheet,\n  Text,\n  View,\n  ScrollView,\n  Button,\n  TouchableOpacity,\n  TextInput,\n  Share,\n} from \"react-native\";\nimport { THEME } from \"../THEME\";\nimport {\n  keyEedit,\n  textEdit,\n  finishTextEdit,\n  deEncriptTextEdit,\n} from \"../store/actions/main\";\nimport { MessageBox } from \"./mesageBox\";\nimport { ChekingFinishText } from './ChekingFinishText';\nimport { Entypo } from '@expo/vector-icons'; \nimport { lang } from \"../lang/lang\";\n\nexport const MainScreen = () => {\n  const [errorMessage, setErrorMessage] = useState({\n    message: \"\",\n    bgColor: \"\",\n    textColor: \"\",\n    time: 5000,\n  });\n  const [showCodeButton, setShowCodeButton] = useState(true);\n  const [showKey, setShowKey] = useState(false);\n  const dispatch = useDispatch();\n  /*useEffect(()=>{\n    dispatch(changeKey()\n    )\n  },[dispatch])\n  */\n  const codeStatus = useSelector((state) => state.mainReducer.codeStatus);\n  const currentLang = useSelector((state) => state.mainReducer.askiiCod);\n  const mainText = useSelector((state) => state.mainReducer.startText);\n  const key = useSelector((state) => state.mainReducer.key);\n  const decodingText = useSelector((state) => state.mainReducer.deEncriptText);\n  const finishText = useSelector((state) => {\n    console.log(\"store - \", state);\n    return state.mainReducer.finishText;\n  });\n\n  const onShare = async () => {\n    try {\n      const result = await Share.share({\n        message: finishText,\n      });\n    } catch (error) {\n      console.log(\"share error\", error);\n    }\n  };\n\n  const pasteText = async () => {\n    const text = await Clipboard.getString();\n    dispatch(textEdit(text));\n    clearInputs()\n  };\n  const clearAll = () =>{\n    dispatch(keyEedit(''))\n    dispatch(textEdit(''))\n    dispatch(finishTextEdit(''))\n    dispatch(deEncriptTextEdit(''))\n  }\n  const clearInputs = () => {\n    console.log('-----clear------')\n    dispatch(deEncriptTextEdit(''))\n    dispatch(finishTextEdit(''))\n  }\n  function textToArr(text) {\n    let arr = [];\n    let fullArr = [];\n\n    for (let i = 0; i < text.length; i++) {\n      let simbol = text[i];\n      let nSimbol = currentLang.indexOf(simbol);\n      arr.push(nSimbol);\n      fullArr.push({ s: simbol, n: nSimbol });\n    }\n    return arr;\n  }\n  function codeText(textSimArray, keySimArray) {\n    let i = -1,\n      long = currentLang.length;\n    let retArr = textSimArray.map((e) => {\n      i++;\n      i > keySimArray.length - 1 ? (i = 0) : false;\n\n      let result = (e + keySimArray[i]) % long;\n      return result;\n    });\n\n    return retArr;\n  }\n  function arrToText(arr) {\n    let str = \"\";\n    arr.forEach((element) => {\n      str = str + currentLang[element];\n    });\n    return str;\n  }\n  function deCodeText(textArr, keyArr) {\n    let i = -1;\n    let long = currentLang.length;\n    let result = textArr.map((e) => {\n      i++;\n      i == keyArr.length ? (i = 0) : false;\n      //(l + t - k) % l\n      let r = long + e - keyArr[i];\n      if (r >= long) {\n        r = r % long;\n      } else {\n        false;\n      }\n      return r;\n    });\n    return result;\n  }\n  function changeSymbols(text, symbols) {\n    for (let i = 0; i < text.length; i++) {\n      if (symbols.indexOf(text[i]) < 0) {\n        return text[i];\n        break;\n      }\n    }\n    return false;\n  }\n  function showMessage(text, bgColor, textColor, time) {\n    console.log('show message', text, bgColor, textColor, time)\n    setErrorMessage({\n      message: text,\n      bgColor: bgColor,\n      textColor: textColor,\n    });\n    setTimeout(() => setErrorMessage({ message: \"\" }), time);\n\n  }\n  function mainTest(text, key) {\n    /*\n    - получить допустимые символы 'currentLang'\n    - проверить символы в тексте и в ключе\n    - перевети симоволы ключа в масив\n    - перевести символы текста в масив\n    - зашифровать, получить масив шифрованых символов\n    - перевести зашифрованный масив в текст\n    ---\n    - перевеси шифрованый текст в масив\n    - перевести ключ в масив (уже сделанно)\n    - разшифровать - получить мачив символов\n    - перевести масив в текст\n    */\n    let //currentLang\n      textArray = textToArr(text),\n      keyArray = textToArr(key),\n      testCodeText = codeText(textArray, keyArray),\n      testResultCode = arrToText(testCodeText),\n      ///--\n      CodeSimbols = textToArr(testResultCode),\n      decode = deCodeText(CodeSimbols, keyArray),\n      decodetText = arrToText(decode);\n    if (text == decodetText) {\n      console.log(`text - ${text}\n      key - ${key}\n      code - ${testResultCode}\n      decode - ${decodetText}`);\n    } else {\n      console.log(\"----START----\");\n      console.log(\"test text - \", text);\n      console.log(\"array symbol text - \", textArray);\n      console.log(\"test key - \", key);\n      console.log(\"currentLang - \", currentLang.length);\n      console.log(\"testCodeText\", testCodeText);\n      console.log(\"testResultCode\", testResultCode);\n      console.log(\"------------------\");\n      console.log(\"testDecode symbol\", CodeSimbols);\n      console.log(\"testDecodeText\", decode);\n      console.log(\"decodetText\", decodetText);\n      console.log(\"----FINISH----\");\n    }\n  }\n\n  const onChangeText = (text) => {\n\n    clearInputs()\n    dispatch(textEdit(text));\n  };\n  const onChangeKey = (text) => {\n    clearInputs()\n    dispatch(keyEedit(text));\n    if (text.length < 3) {\n      setShowCodeButton(true);\n    } else {\n      setShowCodeButton(false);\n    }\n  };\n\n  let onPressDeCode = () => {\n    let textArr = textToArr(mainText), // числовой масив текста\n      keyArr = textToArr(key), // числовой масив ключа\n      codeArr = deCodeText(textArr, keyArr), // числовой масив закодированого текста\n      codingText = arrToText(codeArr);\n    dispatch(finishTextEdit(codingText));\n\n  };\n\n  let onPressCode = () => {\n    if (mainText.length > 500) {\n      showMessage('Длина текста на может \\n быть больше 500 символов', 'grey', 'white', 'rgba(128,128,128,0.5)')\n      return\n    }\n    let i = changeSymbols(mainText, currentLang);\n    if (i !== false) {\n      console.log('Неправильный символ - ' + i.charCodeAt())\n      showMessage('Неправильный символ ' + i, 'rgba(255,0,0,0.7)', 'white', 2000)\n      return;\n    }\n\n    let textArr = textToArr(mainText), // числовой масив текста\n      keyArr = textToArr(key), // числовой масив ключа\n      codeArr = codeText(textArr, keyArr), // числовой масив закодированого текста\n      codingText = arrToText(codeArr);\n\n    dispatch(finishTextEdit(codingText));\n\n    //codeText(textToArr(currentLang), textToArr(currentLang));\n    let decodeArr = deCodeText(codeArr, keyArr), // числовой масив закодированого текста\n      changeText = arrToText(decodeArr);\n\n    dispatch(deEncriptTextEdit(changeText));\n\n  };\n\n  const showPaswordTougle = () => {\n    showKey ? setShowKey(false) : setShowKey(true);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header} elevation={7}>\n        {errorMessage.message !== \"\" ? (\n          <MessageBox\n            text={errorMessage.message}\n            bgColor={errorMessage.bgColor}\n            textColor={errorMessage.textColor}\n          ></MessageBox>\n        ) : (\n            false\n          )}\n          <View>\n          <Entypo name=\"arrow-with-circle-left\" size={24} color=\"black\" />\n          </View>\n          <View>\n            <Entypo name=\"arrow-with-circle-left\" size={24} color=\"black\" />\n            </View>\n          \n        <TouchableOpacity></TouchableOpacity>\n      </View>\n      <ScrollView style={styles.scroll} keyboardShouldPersistTaps=\"handled\">\n        <View style={styles.mainWrapper}>\n          <View style={styles.inputWrapper}>\n            <TextInput\n              style={styles.input}\n              numberOfLines={4}\n              multiline\n              value={mainText}\n              placeholder={\"Введите текст...\"}\n              onChangeText={(text) => onChangeText(text)}\n            ></TextInput>\n            <View style={styles.inputIconWrapper}>\n              <TouchableOpacity\n                style={styles.touchInputIcon}\n                onPress={() => pasteText()}\n              >\n                <FontAwesome5\n                  name=\"paste\"\n                  size={24}\n                  color={THEME.header_color}\n                />\n              </TouchableOpacity>\n            </View>\n          </View>\n          <View style={styles.inputWrapper}>\n            <TextInput\n              secureTextEntry={showKey ? false : true}\n              value = {key}\n              style={styles.input}\n              placeholder={\"Введите ключ...\"}\n              autoCapitalize={\"none\"}\n              //value={Key}\n              onChangeText={(text) => onChangeKey(text)}\n            ></TextInput>\n            <View style={styles.inputIconWrapper}>\n              <TouchableOpacity\n                style={styles.touchInputIcon}\n                onPress={() => showPaswordTougle()}\n              >\n                {showKey ? (\n                  <Octicons name=\"eye\" size={24} color={THEME.header_color} />\n                ) : (\n                    <Octicons\n                      name=\"eye-closed\"\n                      size={24}\n                      color={THEME.header_color}\n                    />\n                  )}\n              </TouchableOpacity>\n            </View>\n          </View>\n          <View style={styles.btnWrapper}>\n            {codeStatus == 'code' ? (\n              <View style={styles.btn}>\n                <Button\n                  title=\"Шифровать\"\n                  onPress={onPressCode}\n                  disabled={showCodeButton}\n                  color={THEME.btn_color}\n                ></Button>\n              </View>\n            ) : false}\n            {codeStatus == 'deCode' ? (\n              <View style={styles.btn}>\n                <Button\n                  title=\"Разшифровать\"\n                  onPress={onPressDeCode}\n                  color={THEME.btn_color}\n                ></Button>\n              </View>\n            ) : false}\n            <View style={styles.btn}>\n              <Button\n                title=\"Очистить\"\n                onPress={() => clearAll()}\n                color={THEME.btn_color}\n              ></Button>\n            </View>\n          </View>\n          <View style={styles.inputWrapper}>\n            <TextInput\n              style={styles.input}\n              numberOfLines={4}\n              multiline\n              placeholder={\"Результат...\"}\n              editable={false}\n              value={finishText}\n            ></TextInput>\n            <View style={styles.inputIconWrapper}>\n              <TouchableOpacity\n                style={styles.touchInputIcon}\n                onPress={() => onShare()}\n              >\n                <FontAwesome5\n                  name=\"share-alt\"\n                  size={24}\n                  color={THEME.header_color}\n                />\n              </TouchableOpacity>\n            </View>\n          </View>\n          <View style={styles.btnWrapper}>\n          <View style={styles.btn}>\n            <Button\n              title=\"Копировать\"\n              // onPress={}\n              color={THEME.btn_color}\n              style={{padding:30,color:'green'}}\n            ></Button> \n            </View>\n            \n          </View>\n          {decodingText ? (<ChekingFinishText decodingText={decodingText}></ChekingFinishText>) : false}\n\n\n        </View>\n      </ScrollView>\n\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.bg_color,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n  header: {\n    width: \"100%\",\n    height: 80,\n    backgroundColor: THEME.header_color,\n    marginBottom: 5,\n  },\n  scroll: {\n    width: \"100%\",\n  },\n  mainWrapper: {\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    width: \"100%\",\n    backgroundColor: THEME.bg_color,\n  },\n  input: {\n    width: \"85%\",\n    //width: \"100%\",\n  },\n  inputWrapper: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 5,\n    borderRadius: 8,\n    backgroundColor: \"#fff\",\n    width: \"80%\",\n    marginVertical: 8,\n    paddingHorizontal: 5,\n  },\n  inputIconWrapper: {\n    width: \"14%\",\n    height: \"100%\",\n  },\n  touchInputIcon: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  btnWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: \"80%\",\n    marginVertical:8,\n  },\n  btn: {\n    width: \"45%\",\n  },\n  text: {\n    color: \"white\",\n  },\n  modalMessage: {\n    backgroundColor: \"#d3d3d3cc\",\n    padding: 10,\n    borderRadius: 5,\n    position: \"absolute\",\n    bottom: 50,\n  },\n  errorBlock: {\n    backgroundColor: \"#BF3030cc\",\n    position: \"absolute\",\n    padding: 10,\n    borderRadius: 8,\n    zIndex: 200,\n  },\n});\n\nlet changeLangArr = (text) => {\n  let mapArray = [];\n  for (let i = 0; i < str.length; i++) {\n    let arr = { i, str: str[i] };\n    mapArray.push(arr);\n  }\n  console.log(mapArray);\n  console.log(str);\n};\n"]},"metadata":{},"sourceType":"module"}