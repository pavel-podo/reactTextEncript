{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nvar _jsxFileName = \"D:\\\\react\\\\text-encryption\\\\src\\\\screens\\\\MainScreen.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { THEME } from \"../THEME\";\nimport { keyEedit, textEdit, encriptTextEdit, deEncriptTextEdit } from \"../store/actions/main\";\nimport { lang } from \"../lang/lang\";\nexport var MainScreen = function MainScreen() {\n  var symbolError = '';\n  console.log(\"start pro - \");\n  var currentLang = useSelector(function (state) {\n    return state.mainReducer.askiiCod;\n  });\n  var dispatch = useDispatch();\n  var mainText = useSelector(function (state) {\n    return state.mainReducer.startText;\n  });\n  var key = useSelector(function (state) {\n    return state.mainReducer.key;\n  });\n  var decodingText = useSelector(function (state) {\n    return state.mainReducer.deEncriptText;\n  });\n  var finishText = useSelector(function (state) {\n    console.log(\"store - \", state);\n    return state.mainReducer.encriptText;\n  });\n\n  function textToArr(text) {\n    var arr = [];\n    var fullArr = [];\n\n    for (var i = 0; i < text.length; i++) {\n      var simbol = text[i];\n      var nSimbol = currentLang.indexOf(simbol);\n      arr.push(nSimbol);\n      fullArr.push({\n        s: simbol,\n        n: nSimbol\n      });\n    }\n\n    return arr;\n  }\n\n  function codeText(textSimArray, keySimArray) {\n    var i = -1,\n        long = currentLang.length;\n    var retArr = textSimArray.map(function (e) {\n      i++;\n      i > keySimArray.length - 1 ? i = 0 : false;\n      var result = (e + keySimArray[i]) % long;\n      return result;\n    });\n    return retArr;\n  }\n\n  function arrToText(arr) {\n    var str = \"\";\n    arr.forEach(function (element) {\n      str = str + currentLang[element];\n    });\n    return str;\n  }\n\n  function deCodeText(textArr, keyArr) {\n    var i = -1;\n    var long = currentLang.length;\n    var result = textArr.map(function (e) {\n      i++;\n      i == keyArr.length ? i = 0 : false;\n      var r = long + e - keyArr[i];\n\n      if (r >= long) {\n        r = r % long;\n      } else {\n          false;\n        }\n\n      return r;\n    });\n    return result;\n  }\n\n  function changeSymbols(text, symbols) {\n    console.log(text, symbols);\n\n    for (var i = 0; i < text.length; i++) {\n      if (text.indexOf(simbols[i]) < 0) {\n        symbolError = (_readOnlyError(\"symbolError\"), simbols[i]);\n        return false;\n      }\n    }\n  }\n\n  function mainTest(text, key) {\n    var textArray = textToArr(text),\n        keyArray = textToArr(key),\n        testCodeText = codeText(textArray, keyArray),\n        testResultCode = arrToText(testCodeText),\n        CodeSimbols = textToArr(testResultCode),\n        decode = deCodeText(CodeSimbols, keyArray),\n        decodetText = arrToText(decode);\n\n    if (text == decodetText) {\n      console.log(\"text - \" + text + \"\\n      key - \" + key + \"\\n      code - \" + testResultCode + \"\\n      decode - \" + decodetText);\n    } else {\n      console.log(\"----START----\");\n      console.log(\"test text - \", text);\n      console.log(\"array symbol text - \", textArray);\n      console.log(\"test key - \", key);\n      console.log(\"currentLang - \", currentLang.length);\n      console.log(\"testCodeText\", testCodeText);\n      console.log(\"testResultCode\", testResultCode);\n      console.log(\"------------------\");\n      console.log(\"testDecode symbol\", CodeSimbols);\n      console.log(\"testDecodeText\", decode);\n      console.log(\"decodetText\", decodetText);\n      console.log(\"----FINISH----\");\n    }\n  }\n\n  var _onChangeText = function onChangeText(text) {\n    dispatch(textEdit(text));\n  };\n\n  var onChangeKey = function onChangeKey(text) {\n    dispatch(keyEedit(text));\n  };\n\n  var onPressDeCode = function onPressDeCode() {\n    var textArr = textToArr(mainText);\n    keyArr = textToArr(key), codeArr = deCodeText(textArr, keyArr), codingText = arrToText(codeArr);\n  };\n\n  var onPressCode = function onPressCode() {\n    if (changeSymbols(mainText, currentLang)) {\n      return false;\n    }\n\n    var textArr = textToArr(mainText),\n        keyArr = textToArr(key),\n        codeArr = codeText(textArr, keyArr),\n        codingText = arrToText(codeArr);\n    dispatch(encriptTextEdit(codingText));\n    codeText(textToArr(currentLang), textToArr(currentLang));\n    console.log(textArr);\n    console.log(keyArr);\n    console.log(codeArr);\n    console.log(\"codingText\", codingText);\n    var decodeArr = deCodeText(codeArr, keyArr),\n        changeText = arrToText(decodeArr);\n    dispatch(deEncriptTextEdit(changeText));\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    elevation: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  })), React.createElement(ScrollView, {\n    style: styles.scroll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.mainWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.errorBlock,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 3\n    }\n  }, \"\\u041D\\u0435\\u0434\\u043E\\u043F\\u0443\\u0441\\u0442\\u0438\\u043C\\u044B\\u0439 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B \" + symbolError)), React.createElement(View, {\n    style: styles.inputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    numberOfLines: 4,\n    multiline: true,\n    placeholder: \"Введите текст...\",\n    onChangeText: function onChangeText(text) {\n      return _onChangeText(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.inputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Введите ключ...\",\n    onChangeText: function onChangeText(text) {\n      return onChangeKey(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.btnWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"\\u0428\\u0438\\u0444\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n    onPress: onPressCode,\n    color: THEME.btn_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"\\u0420\\u0430\\u0437\\u0448\\u0438\\u0444\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n    onPress: onPressDeCode,\n    color: THEME.btn_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  }))), React.createElement(View, {\n    style: styles.inputWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    numberOfLines: 4,\n    multiline: true,\n    placeholder: \"Результат...\",\n    editable: false,\n    value: finishText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, React.createElement(Button, {\n    title: \"\\u041A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n    onPress: Clipboard.setString(finishText),\n    color: THEME.btn_color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.inputWrapper), {}, {\n      backgroundColor: THEME.bg_color\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: _objectSpread(_objectSpread({}, styles.input), {}, {\n      backgroundColor: THEME.bg_color\n    }),\n    numberOfLines: 4,\n    multiline: true,\n    editable: false,\n    placeholder: \"Проверка\",\n    value: decodingText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  })))), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }\n  }, currentLang), React.createElement(View, {\n    style: styles.modalMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, \" \\u0418\\u0434\\u0435\\u0442 \\u0448\\u0438\\u0444\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430\")));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: THEME.bg_color,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  header: {\n    width: \"100%\",\n    height: 80,\n    backgroundColor: THEME.header_color,\n    marginBottom: 5\n  },\n  scroll: {\n    width: \"100%\"\n  },\n  mainWrapper: {\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    width: \"100%\",\n    backgroundColor: THEME.bg_color\n  },\n  input: {\n    backgroundColor: \"#fff\",\n    width: \"100%\"\n  },\n  inputWrapper: {\n    padding: 5,\n    borderRadius: 8,\n    backgroundColor: \"#fff\",\n    width: \"80%\",\n    marginVertical: 5\n  },\n  btnWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: \"80%\",\n    marginTop: 10\n  },\n  btn: {\n    width: \"45%\"\n  },\n  text: {\n    color: \"white\"\n  },\n  modalMessage: {\n    backgroundColor: \"#d3d3d3cc\",\n    padding: 10,\n    borderRadius: 5,\n    position: 'absolute',\n    bottom: 50\n  },\n  errorBlock: {\n    backgroundColor: 'red',\n    position: 'absolute',\n    padding: 10,\n    borderRadius: 8,\n    zIndex: 200\n  }\n});\n\nvar changeLangArr = function changeLangArr(text) {\n  var mapArray = [];\n\n  for (var i = 0; i < str.length; i++) {\n    var arr = {\n      i: i,\n      str: str[i]\n    };\n    mapArray.push(arr);\n  }\n\n  console.log(mapArray);\n  console.log(str);\n};","map":{"version":3,"sources":["D:/react/text-encryption/src/screens/MainScreen.jsx"],"names":["StatusBar","React","useEffect","useRef","useDispatch","useSelector","THEME","keyEedit","textEdit","encriptTextEdit","deEncriptTextEdit","lang","MainScreen","symbolError","console","log","currentLang","state","mainReducer","askiiCod","dispatch","mainText","startText","key","decodingText","deEncriptText","finishText","encriptText","textToArr","text","arr","fullArr","i","length","simbol","nSimbol","indexOf","push","s","n","codeText","textSimArray","keySimArray","long","retArr","map","e","result","arrToText","str","forEach","element","deCodeText","textArr","keyArr","r","changeSymbols","symbols","simbols","mainTest","textArray","keyArray","testCodeText","testResultCode","CodeSimbols","decode","decodetText","onChangeText","onChangeKey","onPressDeCode","codeArr","codingText","onPressCode","decodeArr","changeText","styles","container","header","scroll","mainWrapper","errorBlock","inputWrapper","input","btnWrapper","btn","btn_color","Clipboard","setString","backgroundColor","bg_color","modalMessage","StyleSheet","create","flex","alignItems","justifyContent","width","height","header_color","marginBottom","padding","borderRadius","marginVertical","flexDirection","marginTop","color","position","bottom","zIndex","changeLangArr","mapArray"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Clipboard,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ScrollView,\r\n  Button,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Modal,\r\n} from \"react-native\";\r\nimport { THEME } from \"../THEME\";\r\nimport {\r\n  keyEedit,\r\n  textEdit,\r\n  encriptTextEdit,\r\n  deEncriptTextEdit,\r\n} from \"../store/actions/main\";\r\nimport { lang } from \"../lang/lang\";\r\n\r\nexport const MainScreen = () => {\r\n\r\n  \r\n\r\n  \r\n  const symbolError = '';\r\n  console.log(\"start pro - \");\r\n  const currentLang = useSelector((state) => state.mainReducer.askiiCod);\r\n  const dispatch = useDispatch();\r\n  /*useEffect(()=>{\r\n    dispatch(changeKey()\r\n    )\r\n  },[dispatch])\r\n  */\r\n  const mainText = useSelector((state) => state.mainReducer.startText);\r\n  const key = useSelector((state) => state.mainReducer.key);\r\n  const decodingText = useSelector((state) => state.mainReducer.deEncriptText);\r\n  const finishText = useSelector((state) => {\r\n    console.log(\"store - \", state);\r\n    return state.mainReducer.encriptText;\r\n  });\r\n\r\n  //--------------------\r\n  function textToArr(text) {\r\n    let arr = [];\r\n    let fullArr = [];\r\n\r\n    for (let i = 0; i < text.length; i++) {\r\n      let simbol = text[i];\r\n      let nSimbol = currentLang.indexOf(simbol);\r\n      arr.push(nSimbol);\r\n      fullArr.push({s:simbol,n:nSimbol})\r\n      \r\n      //console.log(`array simbol ${nSimbol} - ${text[i]}`);\r\n    }\r\n    //console.log(fullArr)\r\n    return arr;\r\n  }\r\n  function codeText(textSimArray, keySimArray) {\r\n    let i = -1,\r\n      long = currentLang.length;\r\n    let retArr = textSimArray.map((e) => {\r\n      i++;\r\n      i > keySimArray.length - 1 ? (i = 0) : false;\r\n\r\n      let result = (e + keySimArray[i]) % long;\r\n     // console.log(`text - ${e} +  key ${keySimArray[i]} % ${long} = result ${result}`);\r\n      return result;\r\n    });\r\n\r\n    return retArr;\r\n  }\r\n  function arrToText(arr) {\r\n    let str = \"\";\r\n    arr.forEach((element) => {\r\n      str = str + currentLang[element];\r\n    });\r\n    return str;\r\n  }\r\n  function deCodeText(textArr, keyArr) {\r\n    let i = -1;\r\n    let long = currentLang.length;\r\n    let result = textArr.map((e) => {\r\n      i++;\r\n      i == keyArr.length ? (i = 0) : false;\r\n      //(l + t - k) % l\r\n      let r = long + e - keyArr[i];\r\n      if (r >= long ){\r\n        r = r%long\r\n        //console.log(`номер символа ${e} - номен ключа ${keyArr[i]} = ${r}`)\r\n      }else{\r\n        false\r\n        //r = long + e - keyArr[i]\r\n        //console.log(`длинна ${long} - ключ ${keyArr[i]} + текст ${e} = ${r}`)\r\n      }\r\n      \r\n      \r\n      //console.log(`номер символа ${e} - номен ключа ${keyArr[i]} = ${r}`)\r\n      //console.log(`шаг ключа = ${i}`)\r\n      \r\n      \r\n      return r;\r\n    });\r\n    return result; \r\n  }\r\n  function changeSymbols(text,symbols){\r\n    console.log(text,symbols)\r\n    for(let i = 0;i<text.length;i++){\r\n      if(text.indexOf(simbols[i])<0){\r\n        symbolError = simbols[i];\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  function mainTest(text, key) {\r\n    /*\r\n    - получить допустимые символы 'currentLang'\r\n    - проверить символы в тексте и в ключе\r\n    - перевети симоволы ключа в масив\r\n    - перевести символы текста в масив\r\n    - зашифровать, получить масив шифрованых символов\r\n    - перевести зашифрованный масив в текст\r\n    ---\r\n    - перевеси шифрованый текст в масив\r\n    - перевести ключ в масив (уже сделанно)\r\n    - разшифровать - получить мачив символов\r\n    - перевести масив в текст\r\n    */                \r\n    let\r\n    //currentLang\r\n      textArray = textToArr(text),\r\n      keyArray = textToArr(key),\r\n      testCodeText = codeText(textArray, keyArray),\r\n      testResultCode = arrToText(testCodeText),\r\n      ///--\r\n      CodeSimbols = textToArr(testResultCode),\r\n      decode = deCodeText(CodeSimbols, keyArray),\r\n      decodetText = arrToText(decode);\r\n     if (text == decodetText){ \r\n      console.log(`text - ${text}\r\n      key - ${key}\r\n      code - ${testResultCode}\r\n      decode - ${decodetText}`);}\r\n      else{\r\n\r\n    console.log(\"----START----\");\r\n    console.log(\"test text - \", text);\r\n    console.log(\"array symbol text - \", textArray);\r\n    console.log(\"test key - \", key);\r\n    console.log(\"currentLang - \", currentLang.length);\r\n    console.log(\"testCodeText\", testCodeText);\r\n    console.log(\"testResultCode\", testResultCode);\r\n    console.log(\"------------------\");\r\n    console.log(\"testDecode symbol\", CodeSimbols);\r\n    console.log(\"testDecodeText\", decode);\r\n    console.log(\"decodetText\", decodetText);\r\n    console.log(\"----FINISH----\");\r\n     }\r\n  }\r\n\r\n  //mainTest(`'!\"`,`'`)\r\n  //mainTest(`hell\r\n//o`,`rty`)\r\n//mainTest('я люблю ','xvj')\r\n//for(let i = 0; i<currentLang.length;i++){\r\n//mainTest(`\\\\'!\"#$%&()*+,-./0123456789:;<=>? @ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_abcdefghijklmnopqrstuvwxyz{|}~АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\r\n//`,currentLang[i])}\r\n//mainTest('приветб','1')\r\n//mainTest(`cdefghijkl`,'x')\r\n//mainTest(`abcde`,'a')\r\n\r\n\r\n\r\n\r\n\r\n  let onChangeText = (text) => {\r\n    dispatch(textEdit(text));\r\n  };\r\n  let onChangeKey = (text) => {\r\n    dispatch(keyEedit(text));\r\n  };\r\n\r\n  let onPressDeCode = () => {\r\n    \r\n    let textArr = textToArr(mainText); // числовой масив текста\r\n    (keyArr = textToArr(key)), // числовой масив ключа\r\n      (codeArr = deCodeText(textArr, keyArr)), // числовой масив закодированого текста\r\n      (codingText = arrToText(codeArr));\r\n    // dispatch(encriptTextEdit(codingText));\r\n  };\r\n  \r\n  let onPressCode = () => {\r\n    if (changeSymbols (mainText,currentLang)){\r\n      return false\r\n    }\r\n    let textArr = textToArr(mainText), // числовой масив текста\r\n      keyArr = textToArr(key), // числовой масив ключа\r\n      codeArr = codeText(textArr, keyArr), // числовой масив закодированого текста\r\n      codingText = arrToText(codeArr);\r\n    dispatch(encriptTextEdit(codingText));\r\n    codeText(textToArr(currentLang), textToArr(currentLang));\r\n\r\n    console.log(textArr);\r\n    console.log(keyArr);\r\n    console.log(codeArr);\r\n    console.log(\"codingText\", codingText);\r\n\r\n    let decodeArr = deCodeText(codeArr, keyArr), // числовой масив закодированого текста\r\n      changeText = arrToText(decodeArr);\r\n    dispatch(deEncriptTextEdit(changeText));\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header} elevation={7}>\r\n        <TouchableOpacity></TouchableOpacity>\r\n      </View>\r\n      <ScrollView style={styles.scroll}>\r\n        <View style={styles.mainWrapper}>\r\n          <View style={styles.errorBlock}>\r\n  <Text>{`Недопустимый символ ${symbolError}`}</Text>\r\n          </View>\r\n          <View style={styles.inputWrapper}>\r\n            <TextInput\r\n              style={styles.input}\r\n              numberOfLines={4}\r\n              multiline\r\n              placeholder={\"Введите текст...\"}\r\n              onChangeText={(text) => onChangeText(text)}\r\n            ></TextInput>\r\n          </View>\r\n\r\n          <View style={styles.inputWrapper}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder={\"Введите ключ...\"}\r\n              //value={Key}\r\n              onChangeText={(text) => onChangeKey(text)}\r\n            ></TextInput>\r\n          </View>\r\n          <View style={styles.btnWrapper}>\r\n            <View style={styles.btn}>\r\n              <Button\r\n                title=\"Шифровать\"\r\n                onPress={onPressCode}\r\n                color={THEME.btn_color}\r\n              ></Button>\r\n            </View>\r\n            <View style={styles.btn}>\r\n              <Button\r\n                title=\"Разшифровать\"\r\n                onPress={onPressDeCode}\r\n                color={THEME.btn_color}\r\n              ></Button>\r\n            </View>\r\n          </View>\r\n          <View style={styles.inputWrapper}>\r\n            <TextInput\r\n              style={styles.input}\r\n              numberOfLines={4}\r\n              multiline\r\n              placeholder={\"Результат...\"}\r\n              editable={false}\r\n              value={finishText}\r\n            ></TextInput>\r\n          </View>\r\n          <View style={styles.btn}>\r\n            <Button\r\n              title=\"Копировать\"\r\n              onPress={Clipboard.setString(finishText)}\r\n              color={THEME.btn_color}\r\n            ></Button>\r\n          </View>\r\n          <View\r\n            style={{ ...styles.inputWrapper, backgroundColor: THEME.bg_color }}\r\n          >\r\n            <TextInput\r\n              style={{ ...styles.input, backgroundColor: THEME.bg_color }}\r\n              numberOfLines={4}\r\n              multiline\r\n              editable={false}\r\n              placeholder={\"Проверка\"}\r\n              value={decodingText}\r\n            ></TextInput>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n\r\n      <Text>{currentLang}</Text>\r\n\r\n      <View style={styles.modalMessage}>\r\n        <Text > Идет шифрование текста</Text>\r\n      </View>\r\n      \r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: THEME.bg_color,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  header: {\r\n    width: \"100%\",\r\n    height: 80,\r\n    backgroundColor: THEME.header_color,\r\n    marginBottom: 5,\r\n  },\r\n  scroll: {\r\n    width: \"100%\",\r\n  },\r\n  mainWrapper: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\",\r\n    width: \"100%\",\r\n    backgroundColor: THEME.bg_color,\r\n\r\n    // backgroundColor:'white',\r\n  },\r\n  input: {\r\n    backgroundColor: \"#fff\",\r\n    width: \"100%\",\r\n  },\r\n  inputWrapper: {\r\n    padding: 5,\r\n    borderRadius: 8,\r\n    backgroundColor: \"#fff\",\r\n    width: \"80%\",\r\n    marginVertical: 5,\r\n  },\r\n  btnWrapper: {\r\n    flexDirection: \"row\",\r\n\r\n    justifyContent: \"space-around\",\r\n    width: \"80%\",\r\n    marginTop: 10,\r\n  },\r\n  btn: {\r\n    //alignItems: \"flex-end\",\r\n\r\n    width: \"45%\",\r\n  },\r\n  text: {\r\n    color: \"white\",\r\n  },\r\n  modalMessage:{\r\n    backgroundColor:\"#d3d3d3cc\",\r\n    padding:10,\r\n    borderRadius:5,\r\n    position:'absolute',\r\n    bottom:50,\r\n    \r\n  },\r\n  errorBlock:{\r\n   backgroundColor:'red',\r\n   position:'absolute',\r\n   padding:10,\r\n   borderRadius:8,\r\n   zIndex:200,\r\n\r\n  }\r\n});\r\n\r\nlet changeLangArr = (text) => {\r\n  let mapArray = [];\r\n  for (let i = 0; i < str.length; i++) {\r\n    let arr = { i, str: str[i] };\r\n    mapArray.push(arr);\r\n  }\r\n  console.log(mapArray);\r\n  console.log(str);\r\n};\r\n/*\r\n  let autext = \"\";\r\n    console.log(\"-----\");\r\n    for (let i = 32; i < 127; i++) {\r\n      autext = autext + String.fromCharCode(i);\r\n    }\r\n    for (let i = 1040; i < 1104; i++) {\r\n      autext = autext + String.fromCharCode(i);\r\n    }\r\n\r\n    console.log('autext',autext)\r\n    */\r\n"]},"metadata":{},"sourceType":"module"}